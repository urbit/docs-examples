{"ast":null,"code":"const _excluded = [\"className\", \"tabIndex\", \"focused\", \"open\", \"dropUp\", \"disabled\", \"readOnly\", \"autofilling\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport cn from 'classnames';\nimport React, { useState } from 'react';\nimport useGlobalListener from '@restart/hooks/useGlobalListener';\n\nfunction useKeyboardNavigationCheck() {\n  const [isNavigatingViaKeyboard, setIsNavigatingViaKeyboard] = useState(false);\n  useGlobalListener('keydown', _ref2 => {\n    let {\n      key\n    } = _ref2;\n\n    if (key == ' ' || key === 'Tab' || key == 'Enter' || key && key.indexOf('Arrow') !== -1) {\n      setIsNavigatingViaKeyboard(true);\n    }\n  }); // TODO: use pointerdown\n\n  useGlobalListener('mousedown', () => {\n    setIsNavigatingViaKeyboard(false);\n  });\n  return isNavigatingViaKeyboard;\n}\n\nexport function useWidgetProps(props) {\n  const tabIndex = props.tabIndex != null ? props.tabIndex : -1;\n  const isKeyboardNavigating = useKeyboardNavigationCheck();\n  return {\n    tabIndex: tabIndex,\n    'data-intent': isKeyboardNavigating ? 'keyboard' : 'mouse',\n    className: cn(props.className, 'rw-widget', props.disabled && 'rw-state-disabled', props.readOnly && 'rw-state-readonly', props.focused && 'rw-state-focus', props.autofilling && 'rw-webkit-autofill', props.open && `rw-open${props.dropUp ? '-up' : ''}`)\n  };\n}\nconst Widget = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    className,\n    tabIndex,\n    focused,\n    open,\n    dropUp,\n    disabled,\n    readOnly,\n    autofilling\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const widgetProps = useWidgetProps({\n    className,\n    tabIndex,\n    focused,\n    open,\n    dropUp,\n    disabled,\n    readOnly,\n    autofilling\n  });\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, props, widgetProps));\n});\nWidget.displayName = 'Widget';\nexport default Widget;","map":{"version":3,"sources":["/home/mike/proj/frontend/ui/node_modules/react-widgets/esm/Widget.js"],"names":["_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","cn","React","useState","useGlobalListener","useKeyboardNavigationCheck","isNavigatingViaKeyboard","setIsNavigatingViaKeyboard","useWidgetProps","props","tabIndex","isKeyboardNavigating","className","disabled","readOnly","focused","autofilling","open","dropUp","Widget","forwardRef","_ref","ref","widgetProps","createElement","displayName"],"mappings":"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","sourcesContent":["const _excluded = [\"className\", \"tabIndex\", \"focused\", \"open\", \"dropUp\", \"disabled\", \"readOnly\", \"autofilling\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport cn from 'classnames';\nimport React, { useState } from 'react';\nimport useGlobalListener from '@restart/hooks/useGlobalListener';\n\nfunction useKeyboardNavigationCheck() {\n  const [isNavigatingViaKeyboard, setIsNavigatingViaKeyboard] = useState(false);\n  useGlobalListener('keydown', ({\n    key\n  }) => {\n    if (key == ' ' || key === 'Tab' || key == 'Enter' || key && key.indexOf('Arrow') !== -1) {\n      setIsNavigatingViaKeyboard(true);\n    }\n  }); // TODO: use pointerdown\n\n  useGlobalListener('mousedown', () => {\n    setIsNavigatingViaKeyboard(false);\n  });\n  return isNavigatingViaKeyboard;\n}\n\nexport function useWidgetProps(props) {\n  const tabIndex = props.tabIndex != null ? props.tabIndex : -1;\n  const isKeyboardNavigating = useKeyboardNavigationCheck();\n  return {\n    tabIndex: tabIndex,\n    'data-intent': isKeyboardNavigating ? 'keyboard' : 'mouse',\n    className: cn(props.className, 'rw-widget', props.disabled && 'rw-state-disabled', props.readOnly && 'rw-state-readonly', props.focused && 'rw-state-focus', props.autofilling && 'rw-webkit-autofill', props.open && `rw-open${props.dropUp ? '-up' : ''}`)\n  };\n}\nconst Widget = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    className,\n    tabIndex,\n    focused,\n    open,\n    dropUp,\n    disabled,\n    readOnly,\n    autofilling\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const widgetProps = useWidgetProps({\n    className,\n    tabIndex,\n    focused,\n    open,\n    dropUp,\n    disabled,\n    readOnly,\n    autofilling\n  });\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, props, widgetProps));\n});\nWidget.displayName = 'Widget';\nexport default Widget;"]},"metadata":{},"sourceType":"module"}