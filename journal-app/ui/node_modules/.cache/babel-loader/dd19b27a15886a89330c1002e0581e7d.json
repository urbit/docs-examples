{"ast":null,"code":"var _jsxFileName = \"/home/mike/proj/frontend/ui/src/App.js\";\nimport React, { Component } from 'react';\nimport Urbit from '@urbit/http-api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nwindow.urbit = new Urbit(\"http://localhost:8080\", \"lidlut-tabwed-pillex-ridrup\");\nwindow.urbit.ship = \"zod\";\n\nwindow.urbit.onError = () => console.log(\"error\");\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      entries: []\n    };\n\n    this.getEntries = async () => {\n      const {\n        entries: e\n      } = this.state;\n      const before = e.length === 0 ? Date.now() : e[e.length - 1].id;\n      const max = 6;\n      const path = `/entries/before/${before}/${max}`;\n      const result = await window.urbit.scry({\n        app: \"journal\",\n        path: path\n      });\n      this.handleUpdate(result);\n    };\n\n    this.subscribe = () => {\n      window.urbit.subscribe({\n        app: \"journal\",\n        path: \"/updates\",\n        event: this.handleUpdate\n      });\n    };\n\n    this.handleUpdate = upd => {\n      const items = this.state.entries;\n\n      if (\"entries\" in upd) {\n        this.setState({\n          entries: items.concat(upd.entries)\n        });\n      } else if (\"add\" in upd) {\n        const ind = this.spot(upd.add.id);\n        if (upd.add.id > items[items.length - 1].id) items.splice(ind, 0, upd.add);\n        this.setState({\n          entries: items\n        });\n      } else if (\"edit\" in upd) {\n        const ind = items.findIndex(e => e.id === upd.edit.id);\n        if (ind !== -1) items[ind] = upd.edit;\n        this.setState({\n          entries: items\n        });\n      } else if (\"del\" in upd) {\n        const ind = items.findIndex(e => e.id === upd.del.id);\n        if (ind !== -1) items.splice(ind, 1);\n        this.setState({\n          entries: items\n        });\n      }\n\n      ;\n    };\n  }\n\n  componentDidMount() {\n    this.getEntries();\n    this.subscribe();\n  }\n\n  spot(id) {\n    const {\n      entries: e\n    } = this.state;\n    let low = 0;\n    let high = e.length;\n\n    while (low < high) {\n      let mid = low + high >>> 1;\n      if (e[mid].id > id) low = mid + 1;else high = mid;\n    }\n\n    return low;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.getEntries(),\n        children: \"Moar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(this.state, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mike/proj/frontend/ui/src/App.js"],"names":["React","Component","Urbit","window","urbit","ship","onError","console","log","App","state","entries","getEntries","e","before","length","Date","now","id","max","path","result","scry","app","handleUpdate","subscribe","event","upd","items","setState","concat","ind","spot","add","splice","findIndex","edit","del","componentDidMount","low","high","mid","render","JSON","stringify"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Urbit from '@urbit/http-api';\n\n\nwindow.urbit = new Urbit(\"http://localhost:8080\", \"lidlut-tabwed-pillex-ridrup\");\nwindow.urbit.ship = \"zod\";\nwindow.urbit.onError = () => console.log(\"error\");\n\nclass App extends Component {\n  state = {\n    entries: [],\n  };\n\n  componentDidMount() {\n    this.getEntries();\n    this.subscribe();\n  }\n\n  getEntries = async () => {\n    const {entries: e} = this.state;\n    const before = (e.length === 0) ? Date.now() : e[e.length - 1].id;\n    const max = 6;\n    const path = `/entries/before/${before}/${max}`;\n    const result = await window.urbit.scry({\n      app: \"journal\",\n      path: path\n    });\n    this.handleUpdate(result);\n  };\n\n  subscribe = () => {\n    window.urbit.subscribe({\n      app: \"journal\",\n      path: \"/updates\",\n      event: this.handleUpdate,\n    })\n  };\n\n  spot(id) {\n    const {entries: e} = this.state;\n    let low = 0\n    let high = e.length;\n    while (low < high) {\n      let mid = (low + high) >>> 1;\n      if (e[mid].id > id) low = mid + 1;\n      else high = mid;\n    }\n    return low;\n  }\n\n  handleUpdate = (upd) => {\n    const items = this.state.entries;\n    if (\"entries\" in upd) {\n      this.setState({entries: items.concat(upd.entries)})\n    } else if (\"add\" in upd) {\n      const ind = this.spot(upd.add.id);\n      if (upd.add.id > items[items.length - 1].id) items.splice(ind, 0, upd.add);\n      this.setState({entries: items});\n    } else if (\"edit\" in upd) {\n      const ind = items.findIndex(e => e.id === upd.edit.id);\n      if (ind !== -1) items[ind] = upd.edit;\n      this.setState({entries: items});\n    } else if (\"del\" in upd) {\n      const ind = items.findIndex(e => e.id === upd.del.id);\n      if (ind !== -1) items.splice(ind, 1);\n      this.setState({entries: items});\n    };\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <button onClick={()=>this.getEntries()}>Moar</button>\n        <pre>{JSON.stringify(this.state, null, 2)}</pre>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}