{"ast":null,"code":"/**\n * @name endOfTomorrow\n * @category Day Helpers\n * @summary Return the end of tomorrow.\n * @pure false\n *\n * @description\n * Return the end of tomorrow.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `new Date()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the end of tomorrow\n *\n * @example\n * // If today is 6 October 2014:\n * const result = endOfTomorrow()\n * //=> Tue Oct 7 2014 23:59:59.999\n */\nexport default function endOfTomorrow() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth();\n  var day = now.getDate();\n  var date = new Date(0);\n  date.setFullYear(year, month, day + 1);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","map":{"version":3,"sources":["/home/mike/proj/frontend/ui/node_modules/date-fns/esm/endOfTomorrow/index.js"],"names":["endOfTomorrow","now","Date","year","getFullYear","month","getMonth","day","getDate","date","setFullYear","setHours"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,aAAT,GAAyB;AACtC,MAAIC,GAAG,GAAG,IAAIC,IAAJ,EAAV;AACA,MAAIC,IAAI,GAAGF,GAAG,CAACG,WAAJ,EAAX;AACA,MAAIC,KAAK,GAAGJ,GAAG,CAACK,QAAJ,EAAZ;AACA,MAAIC,GAAG,GAAGN,GAAG,CAACO,OAAJ,EAAV;AACA,MAAIC,IAAI,GAAG,IAAIP,IAAJ,CAAS,CAAT,CAAX;AACAO,EAAAA,IAAI,CAACC,WAAL,CAAiBP,IAAjB,EAAuBE,KAAvB,EAA8BE,GAAG,GAAG,CAApC;AACAE,EAAAA,IAAI,CAACE,QAAL,CAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,GAA1B;AACA,SAAOF,IAAP;AACD","sourcesContent":["/**\n * @name endOfTomorrow\n * @category Day Helpers\n * @summary Return the end of tomorrow.\n * @pure false\n *\n * @description\n * Return the end of tomorrow.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `new Date()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the end of tomorrow\n *\n * @example\n * // If today is 6 October 2014:\n * const result = endOfTomorrow()\n * //=> Tue Oct 7 2014 23:59:59.999\n */\nexport default function endOfTomorrow() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth();\n  var day = now.getDate();\n  var date = new Date(0);\n  date.setFullYear(year, month, day + 1);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}"]},"metadata":{},"sourceType":"module"}