{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dayMatchesModifier = dayMatchesModifier;\nexports.getModifiersForDay = getModifiersForDay;\n\nvar _DateUtils = require('./DateUtils');\n\nvar _Helpers = require('./Helpers');\n/**\n * Return `true` if a date matches the specified modifier.\n *\n * @export\n * @param {Date} day\n * @param {Any} modifier\n * @return {Boolean}\n */\n\n\nfunction dayMatchesModifier(day, modifier) {\n  if (!modifier) {\n    return false;\n  }\n\n  var arr = Array.isArray(modifier) ? modifier : [modifier];\n  return arr.some(function (mod) {\n    if (!mod) {\n      return false;\n    }\n\n    if (mod instanceof Date) {\n      return (0, _DateUtils.isSameDay)(day, mod);\n    }\n\n    if ((0, _Helpers.isRangeOfDates)(mod)) {\n      return (0, _DateUtils.isDayInRange)(day, mod);\n    }\n\n    if (mod.after && mod.before && (0, _DateUtils.isDayAfter)(mod.before, mod.after)) {\n      return (0, _DateUtils.isDayAfter)(day, mod.after) && (0, _DateUtils.isDayBefore)(day, mod.before);\n    }\n\n    if (mod.after && mod.before && ((0, _DateUtils.isDayAfter)(mod.after, mod.before) || (0, _DateUtils.isSameDay)(mod.after, mod.before))) {\n      return (0, _DateUtils.isDayAfter)(day, mod.after) || (0, _DateUtils.isDayBefore)(day, mod.before);\n    }\n\n    if (mod.after) {\n      return (0, _DateUtils.isDayAfter)(day, mod.after);\n    }\n\n    if (mod.before) {\n      return (0, _DateUtils.isDayBefore)(day, mod.before);\n    }\n\n    if (mod.daysOfWeek) {\n      return mod.daysOfWeek.some(function (dayOfWeek) {\n        return day.getDay() === dayOfWeek;\n      });\n    }\n\n    if (typeof mod === 'function') {\n      return mod(day);\n    }\n\n    return false;\n  });\n}\n/**\n * Return the modifiers matching the given day for the given\n * object of modifiers.\n *\n * @export\n * @param {Date} day\n * @param {Object} [modifiersObj={}]\n * @return {Array}\n */\n\n\nfunction getModifiersForDay(day) {\n  var modifiersObj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return Object.keys(modifiersObj).reduce(function (modifiers, modifierName) {\n    var value = modifiersObj[modifierName];\n\n    if (dayMatchesModifier(day, value)) {\n      modifiers.push(modifierName);\n    }\n\n    return modifiers;\n  }, []);\n}\n\nexports.default = {\n  dayMatchesModifier: dayMatchesModifier,\n  getModifiersForDay: getModifiersForDay\n};","map":{"version":3,"mappings":";;;;;QAWgBA;QAkDAC;;AA7DhB;;AACA;AAEA;;;;;;;;;;AAQO,SAASD,kBAAT,CAA4BE,GAA5B,EAAiCC,QAAjC,EAA2C;AAChD,MAAI,CAACA,QAAL,EAAe;AACb,WAAO,KAAP;AACD;;AACD,MAAMC,MAAMC,MAAMC,OAAND,CAAcF,QAAdE,IAA0BF,QAA1BE,GAAqC,CAACF,QAAD,CAAjD;AACA,SAAOC,IAAIG,IAAJH,CAAS,eAAO;AACrB,QAAI,CAACI,GAAL,EAAU;AACR,aAAO,KAAP;AACD;;AACD,QAAIA,eAAeC,IAAnB,EAAyB;AACvB,aAAO,0BAAUP,GAAV,EAAeM,GAAf,CAAP;AACD;;AACD,QAAI,6BAAeA,GAAf,CAAJ,EAAyB;AACvB,aAAO,6BAAaN,GAAb,EAAkBM,GAAlB,CAAP;AACD;;AACD,QAAIA,IAAIE,KAAJF,IAAaA,IAAIG,MAAjBH,IAA2B,2BAAWA,IAAIG,MAAf,EAAuBH,IAAIE,KAA3B,CAA/B,EAAkE;AAChE,aAAO,2BAAWR,GAAX,EAAgBM,IAAIE,KAApB,KAA8B,4BAAYR,GAAZ,EAAiBM,IAAIG,MAArB,CAArC;AACD;;AACD,QACEH,IAAIE,KAAJF,IACAA,IAAIG,MADJH,KAEC,2BAAWA,IAAIE,KAAf,EAAsBF,IAAIG,MAA1B,KAAqC,0BAAUH,IAAIE,KAAd,EAAqBF,IAAIG,MAAzB,CAFtCH,CADF,EAIE;AACA,aAAO,2BAAWN,GAAX,EAAgBM,IAAIE,KAApB,KAA8B,4BAAYR,GAAZ,EAAiBM,IAAIG,MAArB,CAArC;AACD;;AACD,QAAIH,IAAIE,KAAR,EAAe;AACb,aAAO,2BAAWR,GAAX,EAAgBM,IAAIE,KAApB,CAAP;AACD;;AACD,QAAIF,IAAIG,MAAR,EAAgB;AACd,aAAO,4BAAYT,GAAZ,EAAiBM,IAAIG,MAArB,CAAP;AACD;;AACD,QAAIH,IAAII,UAAR,EAAoB;AAClB,aAAOJ,IAAII,UAAJJ,CAAeD,IAAfC,CAAoB;AAAA,eAAaN,IAAIW,MAAJX,OAAiBY,SAA9B;AAApB,QAAP;AACD;;AACD,QAAI,OAAON,GAAP,KAAe,UAAnB,EAA+B;AAC7B,aAAOA,IAAIN,GAAJM,CAAP;AACD;;AACD,WAAO,KAAP;AAhCK,IAAP;AAkCD;AAED;;;;;;;;;;;AASO,SAASP,kBAAT,CAA4BC,GAA5B,EAAoD;AAAA,MAAnBa,YAAmB,uEAAJ,EAAI;AACzD,SAAOC,OAAOC,IAAPD,CAAYD,YAAZC,EAA0BE,MAA1BF,CAAiC,UAACG,SAAD,EAAYC,YAAZ,EAA6B;AACnE,QAAMC,QAAQN,aAAaK,YAAbL,CAAd;;AACA,QAAIf,mBAAmBE,GAAnBF,EAAwBqB,KAAxBrB,CAAJ,EAAoC;AAClCmB,gBAAUG,IAAVH,CAAeC,YAAfD;AACD;;AACD,WAAOA,SAAP;AALK,KAMJ,EANIH,CAAP;AAOD;;kBAEc;AAAEhB,wCAAF;AAAsBC;AAAtB","names":["dayMatchesModifier","getModifiersForDay","day","modifier","arr","Array","isArray","some","mod","Date","after","before","daysOfWeek","getDay","dayOfWeek","modifiersObj","Object","keys","reduce","modifiers","modifierName","value","push"],"sources":["/home/mike/proj/frontend/ui/node_modules/react-day-picker/src/ModifiersUtils.js"],"sourcesContent":["import { isDayAfter, isDayBefore, isDayInRange, isSameDay } from './DateUtils';\nimport { isRangeOfDates } from './Helpers';\n\n/**\n * Return `true` if a date matches the specified modifier.\n *\n * @export\n * @param {Date} day\n * @param {Any} modifier\n * @return {Boolean}\n */\nexport function dayMatchesModifier(day, modifier) {\n  if (!modifier) {\n    return false;\n  }\n  const arr = Array.isArray(modifier) ? modifier : [modifier];\n  return arr.some(mod => {\n    if (!mod) {\n      return false;\n    }\n    if (mod instanceof Date) {\n      return isSameDay(day, mod);\n    }\n    if (isRangeOfDates(mod)) {\n      return isDayInRange(day, mod);\n    }\n    if (mod.after && mod.before && isDayAfter(mod.before, mod.after)) {\n      return isDayAfter(day, mod.after) && isDayBefore(day, mod.before);\n    }\n    if (\n      mod.after &&\n      mod.before &&\n      (isDayAfter(mod.after, mod.before) || isSameDay(mod.after, mod.before))\n    ) {\n      return isDayAfter(day, mod.after) || isDayBefore(day, mod.before);\n    }\n    if (mod.after) {\n      return isDayAfter(day, mod.after);\n    }\n    if (mod.before) {\n      return isDayBefore(day, mod.before);\n    }\n    if (mod.daysOfWeek) {\n      return mod.daysOfWeek.some(dayOfWeek => day.getDay() === dayOfWeek);\n    }\n    if (typeof mod === 'function') {\n      return mod(day);\n    }\n    return false;\n  });\n}\n\n/**\n * Return the modifiers matching the given day for the given\n * object of modifiers.\n *\n * @export\n * @param {Date} day\n * @param {Object} [modifiersObj={}]\n * @return {Array}\n */\nexport function getModifiersForDay(day, modifiersObj = {}) {\n  return Object.keys(modifiersObj).reduce((modifiers, modifierName) => {\n    const value = modifiersObj[modifierName];\n    if (dayMatchesModifier(day, value)) {\n      modifiers.push(modifierName);\n    }\n    return modifiers;\n  }, []);\n}\n\nexport default { dayMatchesModifier, getModifiersForDay };\n"]},"metadata":{},"sourceType":"script"}