{"ast":null,"code":"import * as dateMath from 'date-arithmetic';\nexport let isNullOrInvalid = dte => dte == null || isNaN(+dte);\nlet dates = Object.assign({}, dateMath, {\n  merge(date, time, defaultDate) {\n    if (isNullOrInvalid(time) && isNullOrInvalid(date) == null) return null;\n    if (isNullOrInvalid(time)) time = defaultDate || new Date();\n    if (isNullOrInvalid(date)) date = defaultDate || new Date();\n    date = dates.startOf(date, 'day');\n    date = dates.hours(date, dates.hours(time));\n    date = dates.minutes(date, dates.minutes(time));\n    date = dates.seconds(date, dates.seconds(time));\n    return dates.milliseconds(date, dates.milliseconds(time));\n  }\n\n});\nexport default dates;","map":{"version":3,"sources":["/home/mike/proj/frontend/ui/node_modules/react-widgets/esm/dates.js"],"names":["dateMath","isNullOrInvalid","dte","isNaN","dates","Object","assign","merge","date","time","defaultDate","Date","startOf","hours","minutes","seconds","milliseconds"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,iBAA1B;AACA,OAAO,IAAIC,eAAe,GAAGC,GAAG,IAAIA,GAAG,IAAI,IAAP,IAAeC,KAAK,CAAC,CAACD,GAAF,CAAjD;AACP,IAAIE,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,QAAlB,EAA4B;AACtCO,EAAAA,KAAK,CAACC,IAAD,EAAOC,IAAP,EAAaC,WAAb,EAA0B;AAC7B,QAAIT,eAAe,CAACQ,IAAD,CAAf,IAAyBR,eAAe,CAACO,IAAD,CAAf,IAAyB,IAAtD,EAA4D,OAAO,IAAP;AAC5D,QAAIP,eAAe,CAACQ,IAAD,CAAnB,EAA2BA,IAAI,GAAGC,WAAW,IAAI,IAAIC,IAAJ,EAAtB;AAC3B,QAAIV,eAAe,CAACO,IAAD,CAAnB,EAA2BA,IAAI,GAAGE,WAAW,IAAI,IAAIC,IAAJ,EAAtB;AAC3BH,IAAAA,IAAI,GAAGJ,KAAK,CAACQ,OAAN,CAAcJ,IAAd,EAAoB,KAApB,CAAP;AACAA,IAAAA,IAAI,GAAGJ,KAAK,CAACS,KAAN,CAAYL,IAAZ,EAAkBJ,KAAK,CAACS,KAAN,CAAYJ,IAAZ,CAAlB,CAAP;AACAD,IAAAA,IAAI,GAAGJ,KAAK,CAACU,OAAN,CAAcN,IAAd,EAAoBJ,KAAK,CAACU,OAAN,CAAcL,IAAd,CAApB,CAAP;AACAD,IAAAA,IAAI,GAAGJ,KAAK,CAACW,OAAN,CAAcP,IAAd,EAAoBJ,KAAK,CAACW,OAAN,CAAcN,IAAd,CAApB,CAAP;AACA,WAAOL,KAAK,CAACY,YAAN,CAAmBR,IAAnB,EAAyBJ,KAAK,CAACY,YAAN,CAAmBP,IAAnB,CAAzB,CAAP;AACD;;AAVqC,CAA5B,CAAZ;AAaA,eAAeL,KAAf","sourcesContent":["import * as dateMath from 'date-arithmetic';\nexport let isNullOrInvalid = dte => dte == null || isNaN(+dte);\nlet dates = Object.assign({}, dateMath, {\n  merge(date, time, defaultDate) {\n    if (isNullOrInvalid(time) && isNullOrInvalid(date) == null) return null;\n    if (isNullOrInvalid(time)) time = defaultDate || new Date();\n    if (isNullOrInvalid(date)) date = defaultDate || new Date();\n    date = dates.startOf(date, 'day');\n    date = dates.hours(date, dates.hours(time));\n    date = dates.minutes(date, dates.minutes(time));\n    date = dates.seconds(date, dates.seconds(time));\n    return dates.milliseconds(date, dates.milliseconds(time));\n  }\n\n});\nexport default dates;"]},"metadata":{},"sourceType":"module"}