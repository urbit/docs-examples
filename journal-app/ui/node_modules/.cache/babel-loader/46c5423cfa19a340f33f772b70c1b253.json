{"ast":null,"code":"import React, { useContext, useMemo } from 'react';\nimport * as IntlLocalizers from './IntlLocalizer';\nimport { getMessages } from './messages';\n\nfunction mergeWithDefaults(date, number, messages) {\n  let formatOverrides = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  if (!date && !number) throw new Error('This component requires a Localizer but none was provided');\n  return {\n    formatOverrides,\n    messages: getMessages(messages),\n\n    formatDate(value, format, userFormat) {\n      return date[format](value, userFormat != null ? userFormat : this.formatOverrides[format]);\n    },\n\n    formatNumber(value, userFormat) {\n      return number.format(value, userFormat != null ? userFormat : this.formatOverrides.number);\n    },\n\n    parseDate: date.parse.bind(date),\n    parseNumber: number.parse.bind(number),\n    decimalCharacter: number.decimalCharacter.bind(number),\n    firstOfWeek: date.firstOfWeek.bind(date)\n  };\n}\n\nconst LocalizerContext = /*#__PURE__*/React.createContext(mergeWithDefaults(new IntlLocalizers.DateLocalizer(), new IntlLocalizers.NumberLocalizer()));\n\nconst Localization = _ref => {\n  let {\n    date: _date = new IntlLocalizers.DateLocalizer(),\n    number: _number = new IntlLocalizers.NumberLocalizer(),\n    messages,\n    children\n  } = _ref;\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const localizer = useMemo(() => mergeWithDefaults(_date, _number, messages), [_date, _number, // eslint-disable-next-line react-hooks/exhaustive-deps\n  JSON.stringify(messages)]);\n  return /*#__PURE__*/React.createElement(LocalizerContext.Provider, {\n    value: localizer\n  }, children);\n};\n\nexport const useLocalizer = (messages, formats) => {\n  const localizer = useContext(LocalizerContext);\n  return useMemo(() => {\n    if (!messages && !formats) return localizer;\n    return Object.assign({}, localizer, {\n      messages: getMessages(Object.assign({}, localizer.messages, messages)),\n      formatOverrides: Object.assign({}, localizer.formatOverrides, formats)\n    });\n  }, [messages, formats, localizer]);\n};\nLocalization.useLocalizer = useLocalizer;\nexport default Localization;","map":{"version":3,"sources":["/home/mike/proj/frontend/ui/node_modules/react-widgets/esm/Localization.js"],"names":["React","useContext","useMemo","IntlLocalizers","getMessages","mergeWithDefaults","date","number","messages","formatOverrides","Error","formatDate","value","format","userFormat","formatNumber","parseDate","parse","bind","parseNumber","decimalCharacter","firstOfWeek","LocalizerContext","createContext","DateLocalizer","NumberLocalizer","Localization","_date","_number","children","localizer","JSON","stringify","createElement","Provider","useLocalizer","formats","Object","assign"],"mappings":"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","sourcesContent":["import React, { useContext, useMemo } from 'react';\nimport * as IntlLocalizers from './IntlLocalizer';\nimport { getMessages } from './messages';\n\nfunction mergeWithDefaults(date, number, messages, formatOverrides = {}) {\n  if (!date && !number) throw new Error('This component requires a Localizer but none was provided');\n  return {\n    formatOverrides,\n    messages: getMessages(messages),\n\n    formatDate(value, format, userFormat) {\n      return date[format](value, userFormat != null ? userFormat : this.formatOverrides[format]);\n    },\n\n    formatNumber(value, userFormat) {\n      return number.format(value, userFormat != null ? userFormat : this.formatOverrides.number);\n    },\n\n    parseDate: date.parse.bind(date),\n    parseNumber: number.parse.bind(number),\n    decimalCharacter: number.decimalCharacter.bind(number),\n    firstOfWeek: date.firstOfWeek.bind(date)\n  };\n}\n\nconst LocalizerContext = /*#__PURE__*/React.createContext(mergeWithDefaults(new IntlLocalizers.DateLocalizer(), new IntlLocalizers.NumberLocalizer()));\n\nconst Localization = ({\n  date: _date = new IntlLocalizers.DateLocalizer(),\n  number: _number = new IntlLocalizers.NumberLocalizer(),\n  messages,\n  children\n}) => {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const localizer = useMemo(() => mergeWithDefaults(_date, _number, messages), [_date, _number, // eslint-disable-next-line react-hooks/exhaustive-deps\n  JSON.stringify(messages)]);\n  return /*#__PURE__*/React.createElement(LocalizerContext.Provider, {\n    value: localizer\n  }, children);\n};\n\nexport const useLocalizer = (messages, formats) => {\n  const localizer = useContext(LocalizerContext);\n  return useMemo(() => {\n    if (!messages && !formats) return localizer;\n    return Object.assign({}, localizer, {\n      messages: getMessages(Object.assign({}, localizer.messages, messages)),\n      formatOverrides: Object.assign({}, localizer.formatOverrides, formats)\n    });\n  }, [messages, formats, localizer]);\n};\nLocalization.useLocalizer = useLocalizer;\nexport default Localization;"]},"metadata":{},"sourceType":"module"}