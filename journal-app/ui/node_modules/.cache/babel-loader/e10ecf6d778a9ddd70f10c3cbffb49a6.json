{"ast":null,"code":"import getWindow from './isWindow';\nimport offset from './offset';\n/**\n * Returns the height of a given element.\n * \n * @param node the element\n * @param client whether to use `clientHeight` if possible\n */\n\nexport default function height(node, client) {\n  var win = getWindow(node);\n  return win ? win.innerHeight : client ? node.clientHeight : offset(node).height;\n}","map":{"version":3,"sources":["/home/mike/proj/frontend/ui/node_modules/dom-helpers/esm/height.js"],"names":["getWindow","offset","height","node","client","win","innerHeight","clientHeight"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,MAAT,CAAgBC,IAAhB,EAAsBC,MAAtB,EAA8B;AAC3C,MAAIC,GAAG,GAAGL,SAAS,CAACG,IAAD,CAAnB;AACA,SAAOE,GAAG,GAAGA,GAAG,CAACC,WAAP,GAAqBF,MAAM,GAAGD,IAAI,CAACI,YAAR,GAAuBN,MAAM,CAACE,IAAD,CAAN,CAAaD,MAAzE;AACD","sourcesContent":["import getWindow from './isWindow';\nimport offset from './offset';\n/**\n * Returns the height of a given element.\n * \n * @param node the element\n * @param client whether to use `clientHeight` if possible\n */\n\nexport default function height(node, client) {\n  var win = getWindow(node);\n  return win ? win.innerHeight : client ? node.clientHeight : offset(node).height;\n}"]},"metadata":{},"sourceType":"module"}