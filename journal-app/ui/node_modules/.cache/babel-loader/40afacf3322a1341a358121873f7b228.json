{"ast":null,"code":"const Format = require('../../Format/Format.js');\n\nconst unitShortcuts = require('../../data/unitShortcuts.js');\n\nconst ago = new Format({\n  /* prettier-ignore */\n  //          $1          $2        $3                                                                                   $4\n  matcher: /^(\\+|-|in|) ?([\\d.]+) ?(years?|months?|weeks?|days?|hours?|minutes?|seconds?|milliseconds?|ms|s|m|h|w|d|M|y)( ago)?$/i,\n  handler: function (_ref) {\n    let [, sign, amount, unit, isAgo] = _ref;\n    amount = parseFloat(amount);\n\n    if (unit.length <= 2) {\n      unit = unitShortcuts[unit];\n    } else {\n      unit = unit.replace(/s$/, '');\n      unit = unit.toLowerCase();\n    }\n\n    if (unit === 'week') {\n      unit = 'day';\n      amount *= 7;\n    }\n\n    if (sign === '-' || isAgo) {\n      amount *= -1;\n    }\n\n    const now = this.now();\n\n    if (unit === 'millisecond') {\n      now.setUTCMilliseconds(now.getUTCMilliseconds() + amount);\n    } else if (unit === 'second') {\n      now.setUTCSeconds(now.getUTCSeconds() + amount);\n    } else if (unit === 'minute') {\n      now.setUTCMinutes(now.getUTCMinutes() + amount);\n    } else if (unit === 'hour') {\n      now.setUTCHours(now.getUTCHours() + amount);\n    } else if (unit === 'day') {\n      now.setUTCDate(now.getUTCDate() + amount);\n    } else if (unit === 'month') {\n      now.setUTCMonth(now.getUTCMonth() + amount);\n    } else if (unit === 'year') {\n      now.setUTCFullYear(now.getUTCFullYear() + amount);\n    }\n\n    return {\n      year: now.getUTCFullYear(),\n      month: now.getUTCMonth() + 1,\n      day: now.getUTCDate(),\n      hour: now.getUTCHours(),\n      minute: now.getUTCMinutes(),\n      second: now.getUTCSeconds(),\n      millisecond: now.getUTCMilliseconds()\n    };\n  }\n});\nmodule.exports = ago;","map":{"version":3,"sources":["/home/mike/proj/frontend/ui/node_modules/any-date-parser/src/formats/ago/ago.js"],"names":["Format","require","unitShortcuts","ago","matcher","handler","sign","amount","unit","isAgo","parseFloat","length","replace","toLowerCase","now","setUTCMilliseconds","getUTCMilliseconds","setUTCSeconds","getUTCSeconds","setUTCMinutes","getUTCMinutes","setUTCHours","getUTCHours","setUTCDate","getUTCDate","setUTCMonth","getUTCMonth","setUTCFullYear","getUTCFullYear","year","month","day","hour","minute","second","millisecond","module","exports"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,wBAAD,CAAtB;;AACA,MAAMC,aAAa,GAAGD,OAAO,CAAC,6BAAD,CAA7B;;AAEA,MAAME,GAAG,GAAG,IAAIH,MAAJ,CAAW;AACtB;AACA;AACAI,EAAAA,OAAO,EAAE,uHAHa;AAItBC,EAAAA,OAAO,EAAE,gBAAyC;AAAA,QAA/B,GAAGC,IAAH,EAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,CAA+B;AACjDF,IAAAA,MAAM,GAAGG,UAAU,CAACH,MAAD,CAAnB;;AACA,QAAIC,IAAI,CAACG,MAAL,IAAe,CAAnB,EAAsB;AACrBH,MAAAA,IAAI,GAAGN,aAAa,CAACM,IAAD,CAApB;AACA,KAFD,MAEO;AACNA,MAAAA,IAAI,GAAGA,IAAI,CAACI,OAAL,CAAa,IAAb,EAAmB,EAAnB,CAAP;AACAJ,MAAAA,IAAI,GAAGA,IAAI,CAACK,WAAL,EAAP;AACA;;AACD,QAAIL,IAAI,KAAK,MAAb,EAAqB;AACpBA,MAAAA,IAAI,GAAG,KAAP;AACAD,MAAAA,MAAM,IAAI,CAAV;AACA;;AACD,QAAID,IAAI,KAAK,GAAT,IAAgBG,KAApB,EAA2B;AAC1BF,MAAAA,MAAM,IAAI,CAAC,CAAX;AACA;;AACD,UAAMO,GAAG,GAAG,KAAKA,GAAL,EAAZ;;AACA,QAAIN,IAAI,KAAK,aAAb,EAA4B;AAC3BM,MAAAA,GAAG,CAACC,kBAAJ,CAAuBD,GAAG,CAACE,kBAAJ,KAA2BT,MAAlD;AACA,KAFD,MAEO,IAAIC,IAAI,KAAK,QAAb,EAAuB;AAC7BM,MAAAA,GAAG,CAACG,aAAJ,CAAkBH,GAAG,CAACI,aAAJ,KAAsBX,MAAxC;AACA,KAFM,MAEA,IAAIC,IAAI,KAAK,QAAb,EAAuB;AAC7BM,MAAAA,GAAG,CAACK,aAAJ,CAAkBL,GAAG,CAACM,aAAJ,KAAsBb,MAAxC;AACA,KAFM,MAEA,IAAIC,IAAI,KAAK,MAAb,EAAqB;AAC3BM,MAAAA,GAAG,CAACO,WAAJ,CAAgBP,GAAG,CAACQ,WAAJ,KAAoBf,MAApC;AACA,KAFM,MAEA,IAAIC,IAAI,KAAK,KAAb,EAAoB;AAC1BM,MAAAA,GAAG,CAACS,UAAJ,CAAeT,GAAG,CAACU,UAAJ,KAAmBjB,MAAlC;AACA,KAFM,MAEA,IAAIC,IAAI,KAAK,OAAb,EAAsB;AAC5BM,MAAAA,GAAG,CAACW,WAAJ,CAAgBX,GAAG,CAACY,WAAJ,KAAoBnB,MAApC;AACA,KAFM,MAEA,IAAIC,IAAI,KAAK,MAAb,EAAqB;AAC3BM,MAAAA,GAAG,CAACa,cAAJ,CAAmBb,GAAG,CAACc,cAAJ,KAAuBrB,MAA1C;AACA;;AACD,WAAO;AACNsB,MAAAA,IAAI,EAAEf,GAAG,CAACc,cAAJ,EADA;AAENE,MAAAA,KAAK,EAAEhB,GAAG,CAACY,WAAJ,KAAoB,CAFrB;AAGNK,MAAAA,GAAG,EAAEjB,GAAG,CAACU,UAAJ,EAHC;AAINQ,MAAAA,IAAI,EAAElB,GAAG,CAACQ,WAAJ,EAJA;AAKNW,MAAAA,MAAM,EAAEnB,GAAG,CAACM,aAAJ,EALF;AAMNc,MAAAA,MAAM,EAAEpB,GAAG,CAACI,aAAJ,EANF;AAONiB,MAAAA,WAAW,EAAErB,GAAG,CAACE,kBAAJ;AAPP,KAAP;AASA;AA5CqB,CAAX,CAAZ;AA+CAoB,MAAM,CAACC,OAAP,GAAiBlC,GAAjB","sourcesContent":["const Format = require('../../Format/Format.js');\nconst unitShortcuts = require('../../data/unitShortcuts.js');\n\nconst ago = new Format({\n\t/* prettier-ignore */\n\t//          $1          $2        $3                                                                                   $4\n\tmatcher: /^(\\+|-|in|) ?([\\d.]+) ?(years?|months?|weeks?|days?|hours?|minutes?|seconds?|milliseconds?|ms|s|m|h|w|d|M|y)( ago)?$/i,\n\thandler: function ([, sign, amount, unit, isAgo]) {\n\t\tamount = parseFloat(amount);\n\t\tif (unit.length <= 2) {\n\t\t\tunit = unitShortcuts[unit];\n\t\t} else {\n\t\t\tunit = unit.replace(/s$/, '');\n\t\t\tunit = unit.toLowerCase();\n\t\t}\n\t\tif (unit === 'week') {\n\t\t\tunit = 'day';\n\t\t\tamount *= 7;\n\t\t}\n\t\tif (sign === '-' || isAgo) {\n\t\t\tamount *= -1;\n\t\t}\n\t\tconst now = this.now();\n\t\tif (unit === 'millisecond') {\n\t\t\tnow.setUTCMilliseconds(now.getUTCMilliseconds() + amount);\n\t\t} else if (unit === 'second') {\n\t\t\tnow.setUTCSeconds(now.getUTCSeconds() + amount);\n\t\t} else if (unit === 'minute') {\n\t\t\tnow.setUTCMinutes(now.getUTCMinutes() + amount);\n\t\t} else if (unit === 'hour') {\n\t\t\tnow.setUTCHours(now.getUTCHours() + amount);\n\t\t} else if (unit === 'day') {\n\t\t\tnow.setUTCDate(now.getUTCDate() + amount);\n\t\t} else if (unit === 'month') {\n\t\t\tnow.setUTCMonth(now.getUTCMonth() + amount);\n\t\t} else if (unit === 'year') {\n\t\t\tnow.setUTCFullYear(now.getUTCFullYear() + amount);\n\t\t}\n\t\treturn {\n\t\t\tyear: now.getUTCFullYear(),\n\t\t\tmonth: now.getUTCMonth() + 1,\n\t\t\tday: now.getUTCDate(),\n\t\t\thour: now.getUTCHours(),\n\t\t\tminute: now.getUTCMinutes(),\n\t\t\tsecond: now.getUTCSeconds(),\n\t\t\tmillisecond: now.getUTCMilliseconds(),\n\t\t};\n\t},\n});\n\nmodule.exports = ago;\n"]},"metadata":{},"sourceType":"script"}