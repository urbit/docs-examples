{"ast":null,"code":"import * as React from 'react';\nimport { useMemo } from 'react';\nconst messages = {\n  moveToday: 'Today',\n  moveBack: 'Navigate back',\n  moveForward: 'Navigate forward',\n  dateButton: 'Select date',\n  openCombobox: 'open combobox',\n  emptyList: 'There are no items in this list',\n  emptyFilter: 'The filter returned no results',\n  createOption: (_value, searchTerm) => [' Create option', searchTerm && ' ', searchTerm && /*#__PURE__*/React.createElement(\"strong\", {\n    key: \"_\"\n  }, `\"${searchTerm}\"`)],\n  tagsLabel: 'Selected items',\n  removeLabel: 'Remove selected item',\n  noneSelected: 'no selected items',\n  selectedItems: labels => `Selected items: ${labels.join(', ')}`,\n  // number\n  increment: 'Increment value',\n  decrement: 'Decrement value'\n};\nconst DEFAULTS = {};\nexport function getMessages() {\n  let defaults = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULTS;\n  let processed = {};\n  Object.keys(messages).forEach(message => {\n    let value = defaults[message];\n    if (value == null) value = messages[message];\n    processed[message] = typeof value === 'function' ? value : () => value;\n  });\n  return processed;\n}\nexport const useMessagesWithDefaults = defaults => useMemo(() => getMessages(defaults), [defaults]);","map":{"version":3,"sources":["/home/mike/proj/frontend/ui/node_modules/react-widgets/esm/messages.js"],"names":["React","useMemo","messages","moveToday","moveBack","moveForward","dateButton","openCombobox","emptyList","emptyFilter","createOption","_value","searchTerm","createElement","key","tagsLabel","removeLabel","noneSelected","selectedItems","labels","join","increment","decrement","DEFAULTS","getMessages","defaults","processed","Object","keys","forEach","message","value","useMessagesWithDefaults"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,SAAS,EAAE,OADI;AAEfC,EAAAA,QAAQ,EAAE,eAFK;AAGfC,EAAAA,WAAW,EAAE,kBAHE;AAIfC,EAAAA,UAAU,EAAE,aAJG;AAKfC,EAAAA,YAAY,EAAE,eALC;AAMfC,EAAAA,SAAS,EAAE,iCANI;AAOfC,EAAAA,WAAW,EAAE,gCAPE;AAQfC,EAAAA,YAAY,EAAE,CAACC,MAAD,EAASC,UAAT,KAAwB,CAAC,gBAAD,EAAmBA,UAAU,IAAI,GAAjC,EAAsCA,UAAU,IAAI,aAAaZ,KAAK,CAACa,aAAN,CAAoB,QAApB,EAA8B;AACnIC,IAAAA,GAAG,EAAE;AAD8H,GAA9B,EAEnG,IAAGF,UAAW,GAFqF,CAAjE,CARvB;AAWfG,EAAAA,SAAS,EAAE,gBAXI;AAYfC,EAAAA,WAAW,EAAE,sBAZE;AAafC,EAAAA,YAAY,EAAE,mBAbC;AAcfC,EAAAA,aAAa,EAAEC,MAAM,IAAK,mBAAkBA,MAAM,CAACC,IAAP,CAAY,IAAZ,CAAkB,EAd/C;AAef;AACAC,EAAAA,SAAS,EAAE,iBAhBI;AAiBfC,EAAAA,SAAS,EAAE;AAjBI,CAAjB;AAmBA,MAAMC,QAAQ,GAAG,EAAjB;AACA,OAAO,SAASC,WAAT,GAA0C;AAAA,MAArBC,QAAqB,uEAAVF,QAAU;AAC/C,MAAIG,SAAS,GAAG,EAAhB;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAY1B,QAAZ,EAAsB2B,OAAtB,CAA8BC,OAAO,IAAI;AACvC,QAAIC,KAAK,GAAGN,QAAQ,CAACK,OAAD,CAApB;AACA,QAAIC,KAAK,IAAI,IAAb,EAAmBA,KAAK,GAAG7B,QAAQ,CAAC4B,OAAD,CAAhB;AACnBJ,IAAAA,SAAS,CAACI,OAAD,CAAT,GAAqB,OAAOC,KAAP,KAAiB,UAAjB,GAA8BA,KAA9B,GAAsC,MAAMA,KAAjE;AACD,GAJD;AAKA,SAAOL,SAAP;AACD;AACD,OAAO,MAAMM,uBAAuB,GAAGP,QAAQ,IAAIxB,OAAO,CAAC,MAAMuB,WAAW,CAACC,QAAD,CAAlB,EAA8B,CAACA,QAAD,CAA9B,CAAnD","sourcesContent":["import * as React from 'react';\nimport { useMemo } from 'react';\nconst messages = {\n  moveToday: 'Today',\n  moveBack: 'Navigate back',\n  moveForward: 'Navigate forward',\n  dateButton: 'Select date',\n  openCombobox: 'open combobox',\n  emptyList: 'There are no items in this list',\n  emptyFilter: 'The filter returned no results',\n  createOption: (_value, searchTerm) => [' Create option', searchTerm && ' ', searchTerm && /*#__PURE__*/React.createElement(\"strong\", {\n    key: \"_\"\n  }, `\"${searchTerm}\"`)],\n  tagsLabel: 'Selected items',\n  removeLabel: 'Remove selected item',\n  noneSelected: 'no selected items',\n  selectedItems: labels => `Selected items: ${labels.join(', ')}`,\n  // number\n  increment: 'Increment value',\n  decrement: 'Decrement value'\n};\nconst DEFAULTS = {};\nexport function getMessages(defaults = DEFAULTS) {\n  let processed = {};\n  Object.keys(messages).forEach(message => {\n    let value = defaults[message];\n    if (value == null) value = messages[message];\n    processed[message] = typeof value === 'function' ? value : () => value;\n  });\n  return processed;\n}\nexport const useMessagesWithDefaults = defaults => useMemo(() => getMessages(defaults), [defaults]);"]},"metadata":{},"sourceType":"module"}