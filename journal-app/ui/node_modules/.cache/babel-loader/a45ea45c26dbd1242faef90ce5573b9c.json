{"ast":null,"code":"const _excluded = [\"focusedItem\", \"disabled\", \"onChange\", \"value\", \"min\", \"localizer\", \"max\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport CalendarView from './CalendarView';\nimport { chunk } from './_';\nimport dates from './dates';\nconst months = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n\nfunction monthsInYear(year) {\n  let date = new Date(year, 0, 1);\n  return months.map(i => dates.month(date, i));\n}\n\nfunction YearView(_ref) {\n  let {\n    focusedItem,\n    disabled,\n    onChange,\n    value,\n    min,\n    localizer,\n    max\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  let months = monthsInYear(dates.year(focusedItem));\n  return /*#__PURE__*/React.createElement(CalendarView, _extends({}, props, {\n    focusedItem: focusedItem\n  }), /*#__PURE__*/React.createElement(CalendarView.Body, null, chunk(months, 4).map((row, rowIdx) => /*#__PURE__*/React.createElement(CalendarView.Row, {\n    key: rowIdx\n  }, row.map((date, colIdx) => {\n    let label = localizer.formatDate(date, 'header');\n    return /*#__PURE__*/React.createElement(CalendarView.Cell, {\n      key: colIdx,\n      label: label,\n      date: date,\n      min: min,\n      max: max,\n      unit: \"month\",\n      viewUnit: \"year\",\n      onChange: onChange,\n      focusedItem: focusedItem,\n      selected: value,\n      disabled: disabled\n    }, localizer.formatDate(date, 'month'));\n  })))));\n}\n\nexport default YearView;","map":{"version":3,"sources":["/home/mike/proj/frontend/ui/node_modules/react-widgets/esm/Year.js"],"names":["_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","React","CalendarView","chunk","dates","months","monthsInYear","year","date","Date","map","month","YearView","_ref","focusedItem","disabled","onChange","value","min","localizer","max","props","createElement","Body","row","rowIdx","Row","colIdx","label","formatDate","Cell","unit","viewUnit","selected"],"mappings":"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","sourcesContent":["const _excluded = [\"focusedItem\", \"disabled\", \"onChange\", \"value\", \"min\", \"localizer\", \"max\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport CalendarView from './CalendarView';\nimport { chunk } from './_';\nimport dates from './dates';\nconst months = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n\nfunction monthsInYear(year) {\n  let date = new Date(year, 0, 1);\n  return months.map(i => dates.month(date, i));\n}\n\nfunction YearView(_ref) {\n  let {\n    focusedItem,\n    disabled,\n    onChange,\n    value,\n    min,\n    localizer,\n    max\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  let months = monthsInYear(dates.year(focusedItem));\n  return /*#__PURE__*/React.createElement(CalendarView, _extends({}, props, {\n    focusedItem: focusedItem\n  }), /*#__PURE__*/React.createElement(CalendarView.Body, null, chunk(months, 4).map((row, rowIdx) => /*#__PURE__*/React.createElement(CalendarView.Row, {\n    key: rowIdx\n  }, row.map((date, colIdx) => {\n    let label = localizer.formatDate(date, 'header');\n    return /*#__PURE__*/React.createElement(CalendarView.Cell, {\n      key: colIdx,\n      label: label,\n      date: date,\n      min: min,\n      max: max,\n      unit: \"month\",\n      viewUnit: \"year\",\n      onChange: onChange,\n      focusedItem: focusedItem,\n      selected: value,\n      disabled: disabled\n    }, localizer.formatDate(date, 'month'));\n  })))));\n}\n\nexport default YearView;"]},"metadata":{},"sourceType":"module"}