{"ast":null,"code":"const Format = require('../../Format/Format.js');\n\nconst today = new Format({\n  matcher: /^(now|today|tomorrow|yesterday)/i,\n  handler: function (match) {\n    const now = this.now();\n    const keyword = match[1].toLowerCase();\n\n    switch (keyword) {\n      case 'tomorrow':\n        // JavaScript automatically handles flowing from one day to the next\n        // For example, 31 jan 2020 will auto convert to 1 feb 2020\n        now.setUTCDate(now.getUTCDate() + 1);\n        break;\n\n      case 'yesterday':\n        now.setUTCDate(now.getUTCDate() - 1);\n        break;\n    }\n\n    const result = {\n      year: now.getUTCFullYear(),\n      month: now.getUTCMonth() + 1,\n      day: now.getUTCDate()\n    };\n\n    if (keyword === 'now') {\n      result.hour = now.getUTCHours();\n      result.minute = now.getUTCMinutes();\n      result.second = now.getUTCSeconds();\n      result.millisecond = now.getUTCMilliseconds();\n    }\n\n    return result;\n  }\n});\nmodule.exports = today;","map":{"version":3,"sources":["/home/mike/proj/frontend/ui/node_modules/any-date-parser/src/formats/today/today.js"],"names":["Format","require","today","matcher","handler","match","now","keyword","toLowerCase","setUTCDate","getUTCDate","result","year","getUTCFullYear","month","getUTCMonth","day","hour","getUTCHours","minute","getUTCMinutes","second","getUTCSeconds","millisecond","getUTCMilliseconds","module","exports"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,wBAAD,CAAtB;;AAEA,MAAMC,KAAK,GAAG,IAAIF,MAAJ,CAAW;AACxBG,EAAAA,OAAO,EAAE,kCADe;AAExBC,EAAAA,OAAO,EAAE,UAAUC,KAAV,EAAiB;AACzB,UAAMC,GAAG,GAAG,KAAKA,GAAL,EAAZ;AACA,UAAMC,OAAO,GAAGF,KAAK,CAAC,CAAD,CAAL,CAASG,WAAT,EAAhB;;AACA,YAAQD,OAAR;AACC,WAAK,UAAL;AACC;AACA;AACAD,QAAAA,GAAG,CAACG,UAAJ,CAAeH,GAAG,CAACI,UAAJ,KAAmB,CAAlC;AACA;;AACD,WAAK,WAAL;AACCJ,QAAAA,GAAG,CAACG,UAAJ,CAAeH,GAAG,CAACI,UAAJ,KAAmB,CAAlC;AACA;AARF;;AAUA,UAAMC,MAAM,GAAG;AACdC,MAAAA,IAAI,EAAEN,GAAG,CAACO,cAAJ,EADQ;AAEdC,MAAAA,KAAK,EAAER,GAAG,CAACS,WAAJ,KAAoB,CAFb;AAGdC,MAAAA,GAAG,EAAEV,GAAG,CAACI,UAAJ;AAHS,KAAf;;AAKA,QAAIH,OAAO,KAAK,KAAhB,EAAuB;AACtBI,MAAAA,MAAM,CAACM,IAAP,GAAcX,GAAG,CAACY,WAAJ,EAAd;AACAP,MAAAA,MAAM,CAACQ,MAAP,GAAgBb,GAAG,CAACc,aAAJ,EAAhB;AACAT,MAAAA,MAAM,CAACU,MAAP,GAAgBf,GAAG,CAACgB,aAAJ,EAAhB;AACAX,MAAAA,MAAM,CAACY,WAAP,GAAqBjB,GAAG,CAACkB,kBAAJ,EAArB;AACA;;AACD,WAAOb,MAAP;AACA;AA3BuB,CAAX,CAAd;AA8BAc,MAAM,CAACC,OAAP,GAAiBxB,KAAjB","sourcesContent":["const Format = require('../../Format/Format.js');\n\nconst today = new Format({\n\tmatcher: /^(now|today|tomorrow|yesterday)/i,\n\thandler: function (match) {\n\t\tconst now = this.now();\n\t\tconst keyword = match[1].toLowerCase();\n\t\tswitch (keyword) {\n\t\t\tcase 'tomorrow':\n\t\t\t\t// JavaScript automatically handles flowing from one day to the next\n\t\t\t\t// For example, 31 jan 2020 will auto convert to 1 feb 2020\n\t\t\t\tnow.setUTCDate(now.getUTCDate() + 1);\n\t\t\t\tbreak;\n\t\t\tcase 'yesterday':\n\t\t\t\tnow.setUTCDate(now.getUTCDate() - 1);\n\t\t\t\tbreak;\n\t\t}\n\t\tconst result = {\n\t\t\tyear: now.getUTCFullYear(),\n\t\t\tmonth: now.getUTCMonth() + 1,\n\t\t\tday: now.getUTCDate(),\n\t\t};\n\t\tif (keyword === 'now') {\n\t\t\tresult.hour = now.getUTCHours();\n\t\t\tresult.minute = now.getUTCMinutes();\n\t\t\tresult.second = now.getUTCSeconds();\n\t\t\tresult.millisecond = now.getUTCMilliseconds();\n\t\t}\n\t\treturn result;\n\t},\n});\n\nmodule.exports = today;\n"]},"metadata":{},"sourceType":"script"}