{"ast":null,"code":"var _jsxFileName = \"/home/mike/proj/frontend/ui/src/App.js\";\nimport React, { Component } from 'react';\nimport Urbit from '@urbit/http-api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nwindow.urbit = async () => {\n  await Urbit.authenticate({\n    ship: \"zod\",\n    url: \"localhost:8080\",\n    code: \"lidlut-tabwed-pillex-ridrup\",\n    verbose: true\n  });\n};\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.scry();\n  }\n\n  async scry() {\n    const result = await window.urbit.scry({\n      app: \"graph-store\",\n      path: \"/keys\"\n    });\n    this.setState(result);\n  }\n\n  async init() {\n    window.urbit = await Urbit.authenticate({\n      ship: \"zod\",\n      url: \"localhost:8080\",\n      code: \"lidlut-tabwed-pillex-ridrup\",\n      verbose: true\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(this.state, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mike/proj/frontend/ui/src/App.js"],"names":["React","Component","Urbit","window","urbit","authenticate","ship","url","code","verbose","App","state","componentDidMount","scry","result","app","path","setState","init","render","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,iBAAlB;;;AAEAC,MAAM,CAACC,KAAP,GAAe,YAAY;AACzB,QAAMF,KAAK,CAACG,YAAN,CAAmB;AACvBC,IAAAA,IAAI,EAAE,KADiB;AAEvBC,IAAAA,GAAG,EAAE,gBAFkB;AAGvBC,IAAAA,IAAI,EAAE,6BAHiB;AAIvBC,IAAAA,OAAO,EAAE;AAJc,GAAnB,CAAN;AAKG,CANL;;AAQA,MAAMC,GAAN,SAAkBT,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BU,KAD0B,GAClB,EADkB;AAAA;;AAG1BC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,IAAL;AACD;;AAES,QAAJA,IAAI,GAAG;AACX,UAAMC,MAAM,GAAG,MAAMX,MAAM,CAACC,KAAP,CAAaS,IAAb,CAAkB;AACrCE,MAAAA,GAAG,EAAE,aADgC;AAErCC,MAAAA,IAAI,EAAE;AAF+B,KAAlB,CAArB;AAIA,SAAKC,QAAL,CAAcH,MAAd;AACD;;AAES,QAAJI,IAAI,GAAG;AACXf,IAAAA,MAAM,CAACC,KAAP,GAAe,MAAMF,KAAK,CAACG,YAAN,CAAmB;AACtCC,MAAAA,IAAI,EAAE,KADgC;AAEtCC,MAAAA,GAAG,EAAE,gBAFiC;AAGtCC,MAAAA,IAAI,EAAE,6BAHgC;AAItCC,MAAAA,OAAO,EAAE;AAJ6B,KAAnB,CAArB;AAMD;;AAGDU,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAA,gBAAMC,IAAI,CAACC,SAAL,CAAe,KAAKV,KAApB,EAA2B,IAA3B,EAAiC,CAAjC;AAAN;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AA3ByB;;AA8B5B,eAAeD,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport Urbit from '@urbit/http-api';\n\nwindow.urbit = async () => {\n  await Urbit.authenticate({\n    ship: \"zod\",\n    url: \"localhost:8080\",\n    code: \"lidlut-tabwed-pillex-ridrup\",\n    verbose: true\n  })};\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    this.scry();\n  };\n\n  async scry() {\n    const result = await window.urbit.scry({\n      app: \"graph-store\",\n      path: \"/keys\"\n    });\n    this.setState(result);\n  };\n\n  async init() {\n    window.urbit = await Urbit.authenticate({\n      ship: \"zod\",\n      url: \"localhost:8080\",\n      code: \"lidlut-tabwed-pillex-ridrup\",\n      verbose: true\n    });\n  };\n\n\n  render() {\n    return <pre>{JSON.stringify(this.state, null, 2)}</pre>;\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}