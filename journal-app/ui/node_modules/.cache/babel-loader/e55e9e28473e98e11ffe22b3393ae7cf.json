{"ast":null,"code":"var _jsxFileName = \"/home/mike/proj/frontend/ui/src/App.js\";\nimport React, { Component } from 'react';\nimport Urbit from '@urbit/http-api';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Stack from 'react-bootstrap/Stack';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.urbit = new Urbit(\"http://localhost:8080\", \"lidlut-tabwed-pillex-ridrup\");\n    this.state = {\n      entries: []\n    };\n\n    this.getEntries = async () => {\n      const {\n        entries: e\n      } = this.state;\n      const before = e.length === 0 ? Date.now() : e[e.length - 1].id;\n      const max = 2;\n      const path = `/entries/before/${before}/${max}`;\n      const result = await this.urbit.scry({\n        app: \"journal\",\n        path: path\n      });\n      this.handleUpdate(result);\n    };\n\n    this.subscribe = () => {\n      this.urbit.subscribe({\n        app: \"journal\",\n        path: \"/updates\",\n        event: this.handleUpdate\n      });\n    };\n\n    this.delete = id => {\n      this.urbit.poke({\n        app: \"journal\",\n        mark: \"journal-action\",\n        json: {\n          \"del\": {\n            \"id\": id\n          }\n        }\n      });\n    };\n\n    this.spot = id => {\n      const {\n        entries: e\n      } = this.state;\n      let low = 0;\n      let high = e.length;\n\n      while (low < high) {\n        let mid = low + high >>> 1;\n        if (e[mid].id > id) low = mid + 1;else high = mid;\n      }\n\n      return low;\n    };\n\n    this.handleUpdate = upd => {\n      const items = this.state.entries;\n\n      if (\"entries\" in upd) {\n        const newItems = items.concat(upd.entries.map(e => ({ ...e,\n          edit: false\n        })));\n        this.setState({\n          entries: newItems\n        });\n      } else if (\"add\" in upd) {\n        const ind = this.spot(upd.add.id);\n\n        if (upd.add.id > items[items.length - 1].id) {\n          items.splice(ind, 0, { ...upd.add,\n            edit: false\n          });\n        }\n\n        this.setState({\n          entries: items\n        });\n      } else if (\"edit\" in upd) {\n        const ind = items.findIndex(e => e.id === upd.edit.id);\n        if (ind !== -1) items[ind] = { ...upd.edit,\n          edit: false\n        };\n        this.setState({\n          entries: items\n        });\n      } else if (\"del\" in upd) {\n        const ind = items.findIndex(e => e.id === upd.del.id);\n        if (ind !== -1) items.splice(ind, 1);\n        this.setState({\n          entries: items\n        });\n      }\n\n      ;\n    };\n\n    this.setEdit = id => {\n      const {\n        entries\n      } = this.state;\n      const ind = entries.findIndex(e => e.id === id);\n\n      if (ind !== -1) {\n        entries[ind].edit = true;\n        this.setState({\n          entries: entries\n        });\n      }\n    };\n\n    this.printEntry = _ref => {\n      let {\n        id,\n        txt,\n        edit\n      } = _ref;\n      const reg = /(?:\\r?\\n[ \\t]*){2,}(?!\\s*$)/;\n      let d = new Date(id);\n      return /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          maxWidth: \"40rem\",\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          className: \"fs-4\",\n          children: d.toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: edit ? /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n            value: txt,\n            style: {\n              width: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 14\n          }, this) : txt.split(reg).map((e, ind) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: e\n          }, ind.toString(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 45\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n          className: \"d-flex flex-wrap justify-content-between\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-primary\",\n            onClick: () => this.setEdit(id),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-danger\",\n            onClick: () => this.delete(id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this)]\n      }, id.toString(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.urbit.ship = \"zod\";\n  }\n\n  componentDidMount() {\n    this.getEntries();\n    this.subscribe();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => this.getEntries(),\n        children: \"Moar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        gap: 5,\n        className: \"m-3 d-flex align-items-center\",\n        children: this.state.entries.map(e => this.printEntry(e))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mike/proj/frontend/ui/src/App.js"],"names":["React","Component","Urbit","TextareaAutosize","Button","Card","Stack","App","constructor","urbit","state","entries","getEntries","e","before","length","Date","now","id","max","path","result","scry","app","handleUpdate","subscribe","event","delete","poke","mark","json","spot","low","high","mid","upd","items","newItems","concat","map","edit","setState","ind","add","splice","findIndex","del","setEdit","printEntry","txt","reg","d","maxWidth","width","toLocaleString","split","toString","ship","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Urbit from '@urbit/http-api';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Stack from 'react-bootstrap/Stack';\n\nclass App extends Component {\n  urbit = new Urbit(\"http://localhost:8080\", \"lidlut-tabwed-pillex-ridrup\");\n  state = {\n    entries: [],\n  };\n\n  constructor() {\n    super();\n    this.urbit.ship = \"zod\"\n  }\n\n  componentDidMount() {\n    this.getEntries();\n    this.subscribe();\n  }\n\n  getEntries = async () => {\n    const {entries: e} = this.state;\n    const before = (e.length === 0) ? Date.now() : e[e.length - 1].id;\n    const max = 2;\n    const path = `/entries/before/${before}/${max}`;\n    const result = await this.urbit.scry({\n      app: \"journal\",\n      path: path\n    });\n    this.handleUpdate(result);\n  };\n\n  subscribe = () => {\n    this.urbit.subscribe({\n      app: \"journal\",\n      path: \"/updates\",\n      event: this.handleUpdate,\n    })\n  };\n\n  delete = (id) => {\n    this.urbit.poke({\n      app: \"journal\",\n      mark: \"journal-action\",\n      json: {\"del\": {\"id\": id}}\n    })\n  };\n\n  spot = (id) => {\n    const {entries: e} = this.state;\n    let low = 0\n    let high = e.length;\n    while (low < high) {\n      let mid = (low + high) >>> 1;\n      if (e[mid].id > id) low = mid + 1;\n      else high = mid;\n    }\n    return low;\n  }\n\n  handleUpdate = (upd) => {\n    const items = this.state.entries;\n    if (\"entries\" in upd) {\n      const newItems = items.concat(\n        upd.entries.map(e => ({...e, edit: false}))\n      );\n      this.setState({entries: newItems})\n    } else if (\"add\" in upd) {\n      const ind = this.spot(upd.add.id);\n      if (upd.add.id > items[items.length - 1].id) {\n        items.splice(ind, 0, {...upd.add, edit: false});\n      }\n      this.setState({entries: items});\n    } else if (\"edit\" in upd) {\n      const ind = items.findIndex(e => e.id === upd.edit.id);\n      if (ind !== -1) items[ind] = {...upd.edit, edit: false};\n      this.setState({entries: items});\n    } else if (\"del\" in upd) {\n      const ind = items.findIndex(e => e.id === upd.del.id);\n      if (ind !== -1) items.splice(ind, 1);\n      this.setState({entries: items});\n    };\n  };\n\n  setEdit = (id) => {\n    const {entries} = this.state;\n    const ind = entries.findIndex(e => e.id === id);\n    if (ind !== -1) {\n      entries[ind].edit = true;\n      this.setState({entries: entries})\n    }\n  };\n\n  printEntry = ({id, txt, edit}) => {\n    const reg = /(?:\\r?\\n[ \\t]*){2,}(?!\\s*$)/;\n    let d = new Date(id);\n    return (\n      <Card key={id.toString()} style={{maxWidth: \"40rem\", width: \"100%\"}}>\n        <Card.Header className=\"fs-4\">\n          {d.toLocaleString()}\n        </Card.Header>\n        <Card.Body>\n          {edit\n           ? <TextareaAutosize value={txt} style={{width: \"100%\"}} />\n           : txt.split(reg).map((e, ind) => <p key={ind.toString()}>{e}</p>)\n          }\n        </Card.Body>\n        <Card.Footer className=\"d-flex flex-wrap justify-content-between\">\n          <Button variant=\"outline-primary\" onClick={()=>this.setEdit(id)}>Edit</Button>\n          <Button variant=\"outline-danger\" onClick={()=>this.delete(id)}>Delete</Button>\n        </Card.Footer>\n      </Card>\n    )\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Button onClick={()=>this.getEntries()}>Moar</Button>\n        <Stack gap={5} className=\"m-3 d-flex align-items-center\">\n          {this.state.entries.map(e => this.printEntry(e))}\n        </Stack>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}