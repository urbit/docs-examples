{"ast":null,"code":"import addDays from \"../addDays/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name add\n * @category Common Helpers\n * @summary Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @description\n * Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n *\n * | Key            | Description                        |\n * |----------------|------------------------------------|\n * | years          | Amount of years to be added        |\n * | months         | Amount of months to be added       |\n * | weeks          | Amount of weeks to be added        |\n * | days           | Amount of days to be added         |\n * | hours          | Amount of hours to be added        |\n * | minutes        | Amount of minutes to be added      |\n * | seconds        | Amount of seconds to be added      |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add the following duration to 1 September 2014, 10:19:50\n * const result = add(new Date(2014, 8, 1, 10, 19, 50), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30,\n * })\n * //=> Thu Jun 15 2017 15:29:20\n */\n\nexport default function add(dirtyDate, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || typeof duration !== 'object') return new Date(NaN);\n  var years = duration.years ? toInteger(duration.years) : 0;\n  var months = duration.months ? toInteger(duration.months) : 0;\n  var weeks = duration.weeks ? toInteger(duration.weeks) : 0;\n  var days = duration.days ? toInteger(duration.days) : 0;\n  var hours = duration.hours ? toInteger(duration.hours) : 0;\n  var minutes = duration.minutes ? toInteger(duration.minutes) : 0;\n  var seconds = duration.seconds ? toInteger(duration.seconds) : 0; // Add years and months\n\n  var date = toDate(dirtyDate);\n  var dateWithMonths = months || years ? addMonths(date, months + years * 12) : date; // Add weeks and days\n\n  var dateWithDays = days || weeks ? addDays(dateWithMonths, days + weeks * 7) : dateWithMonths; // Add days, hours, minutes and seconds\n\n  var minutesToAdd = minutes + hours * 60;\n  var secondsToAdd = seconds + minutesToAdd * 60;\n  var msToAdd = secondsToAdd * 1000;\n  var finalDate = new Date(dateWithDays.getTime() + msToAdd);\n  return finalDate;\n}","map":{"version":3,"sources":["/home/mike/proj/frontend/ui/node_modules/date-fns/esm/add/index.js"],"names":["addDays","addMonths","toDate","requiredArgs","toInteger","add","dirtyDate","duration","arguments","Date","NaN","years","months","weeks","days","hours","minutes","seconds","date","dateWithMonths","dateWithDays","minutesToAdd","secondsToAdd","msToAdd","finalDate","getTime"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,qBAApB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,GAAT,CAAaC,SAAb,EAAwBC,QAAxB,EAAkC;AAC/CJ,EAAAA,YAAY,CAAC,CAAD,EAAIK,SAAJ,CAAZ;AACA,MAAI,CAACD,QAAD,IAAa,OAAOA,QAAP,KAAoB,QAArC,EAA+C,OAAO,IAAIE,IAAJ,CAASC,GAAT,CAAP;AAC/C,MAAIC,KAAK,GAAGJ,QAAQ,CAACI,KAAT,GAAiBP,SAAS,CAACG,QAAQ,CAACI,KAAV,CAA1B,GAA6C,CAAzD;AACA,MAAIC,MAAM,GAAGL,QAAQ,CAACK,MAAT,GAAkBR,SAAS,CAACG,QAAQ,CAACK,MAAV,CAA3B,GAA+C,CAA5D;AACA,MAAIC,KAAK,GAAGN,QAAQ,CAACM,KAAT,GAAiBT,SAAS,CAACG,QAAQ,CAACM,KAAV,CAA1B,GAA6C,CAAzD;AACA,MAAIC,IAAI,GAAGP,QAAQ,CAACO,IAAT,GAAgBV,SAAS,CAACG,QAAQ,CAACO,IAAV,CAAzB,GAA2C,CAAtD;AACA,MAAIC,KAAK,GAAGR,QAAQ,CAACQ,KAAT,GAAiBX,SAAS,CAACG,QAAQ,CAACQ,KAAV,CAA1B,GAA6C,CAAzD;AACA,MAAIC,OAAO,GAAGT,QAAQ,CAACS,OAAT,GAAmBZ,SAAS,CAACG,QAAQ,CAACS,OAAV,CAA5B,GAAiD,CAA/D;AACA,MAAIC,OAAO,GAAGV,QAAQ,CAACU,OAAT,GAAmBb,SAAS,CAACG,QAAQ,CAACU,OAAV,CAA5B,GAAiD,CAA/D,CAT+C,CASmB;;AAElE,MAAIC,IAAI,GAAGhB,MAAM,CAACI,SAAD,CAAjB;AACA,MAAIa,cAAc,GAAGP,MAAM,IAAID,KAAV,GAAkBV,SAAS,CAACiB,IAAD,EAAON,MAAM,GAAGD,KAAK,GAAG,EAAxB,CAA3B,GAAyDO,IAA9E,CAZ+C,CAYqC;;AAEpF,MAAIE,YAAY,GAAGN,IAAI,IAAID,KAAR,GAAgBb,OAAO,CAACmB,cAAD,EAAiBL,IAAI,GAAGD,KAAK,GAAG,CAAhC,CAAvB,GAA4DM,cAA/E,CAd+C,CAcgD;;AAE/F,MAAIE,YAAY,GAAGL,OAAO,GAAGD,KAAK,GAAG,EAArC;AACA,MAAIO,YAAY,GAAGL,OAAO,GAAGI,YAAY,GAAG,EAA5C;AACA,MAAIE,OAAO,GAAGD,YAAY,GAAG,IAA7B;AACA,MAAIE,SAAS,GAAG,IAAIf,IAAJ,CAASW,YAAY,CAACK,OAAb,KAAyBF,OAAlC,CAAhB;AACA,SAAOC,SAAP;AACD","sourcesContent":["import addDays from \"../addDays/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n\n/**\n * @name add\n * @category Common Helpers\n * @summary Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @description\n * Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n *\n * | Key            | Description                        |\n * |----------------|------------------------------------|\n * | years          | Amount of years to be added        |\n * | months         | Amount of months to be added       |\n * | weeks          | Amount of weeks to be added        |\n * | days           | Amount of days to be added         |\n * | hours          | Amount of hours to be added        |\n * | minutes        | Amount of minutes to be added      |\n * | seconds        | Amount of seconds to be added      |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add the following duration to 1 September 2014, 10:19:50\n * const result = add(new Date(2014, 8, 1, 10, 19, 50), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30,\n * })\n * //=> Thu Jun 15 2017 15:29:20\n */\nexport default function add(dirtyDate, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || typeof duration !== 'object') return new Date(NaN);\n  var years = duration.years ? toInteger(duration.years) : 0;\n  var months = duration.months ? toInteger(duration.months) : 0;\n  var weeks = duration.weeks ? toInteger(duration.weeks) : 0;\n  var days = duration.days ? toInteger(duration.days) : 0;\n  var hours = duration.hours ? toInteger(duration.hours) : 0;\n  var minutes = duration.minutes ? toInteger(duration.minutes) : 0;\n  var seconds = duration.seconds ? toInteger(duration.seconds) : 0; // Add years and months\n\n  var date = toDate(dirtyDate);\n  var dateWithMonths = months || years ? addMonths(date, months + years * 12) : date; // Add weeks and days\n\n  var dateWithDays = days || weeks ? addDays(dateWithMonths, days + weeks * 7) : dateWithMonths; // Add days, hours, minutes and seconds\n\n  var minutesToAdd = minutes + hours * 60;\n  var secondsToAdd = seconds + minutesToAdd * 60;\n  var msToAdd = secondsToAdd * 1000;\n  var finalDate = new Date(dateWithDays.getTime() + msToAdd);\n  return finalDate;\n}"]},"metadata":{},"sourceType":"module"}