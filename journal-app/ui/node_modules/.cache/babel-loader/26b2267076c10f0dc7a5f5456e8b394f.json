{"ast":null,"code":"const startCodes = {\n  arab: 1632,\n  arabext: 1776,\n  bali: 6992,\n  beng: 2534,\n  deva: 2406,\n  fullwide: 65296,\n  gujr: 2790,\n  khmr: 6112,\n  knda: 3302,\n  laoo: 3792,\n  limb: 6470,\n  mlym: 3430,\n  mong: 6160,\n  mymr: 4160,\n  orya: 2918,\n  tamldec: 3046,\n  telu: 3174,\n  thai: 3664,\n  tibt: 3872\n}; // full-width numbers, hanidec numbers, latin numbers (\\d)\n\nconst chineseGroup = '[０１２３４５６７８９〇一二三四五六七八九\\\\d]';\nconst defaultLookup = {\n  0: 0,\n  1: 1,\n  2: 2,\n  3: 3,\n  4: 4,\n  5: 5,\n  6: 6,\n  7: 7,\n  8: 8,\n  9: 9,\n  '０': 0,\n  '１': 1,\n  '２': 2,\n  '３': 3,\n  '４': 4,\n  '５': 5,\n  '６': 6,\n  '７': 7,\n  '８': 8,\n  '９': 9,\n  〇: 0,\n  一: 1,\n  二: 2,\n  三: 3,\n  四: 4,\n  五: 5,\n  六: 6,\n  七: 7,\n  八: 8,\n  九: 9\n};\nconst cache = {};\n\nfunction buildDigits(nsName) {\n  if (cache[nsName]) {\n    return cache[nsName];\n  }\n\n  if (nsName === 'fullwide' || nsName === 'hanidec') {\n    return {\n      group: chineseGroup,\n      lookup: { ...defaultLookup\n      }\n    };\n  }\n\n  const startCode = startCodes[nsName];\n  /* istanbul ignore next */\n\n  if (!startCode) {\n    // unknown numbering system; treat like latn\n    return {\n      group: '\\\\d',\n      lookup: { ...defaultLookup\n      }\n    };\n  }\n\n  const start = String.fromCharCode(startCode);\n  const end = String.fromCharCode(startCode + 9);\n  const lookup = {};\n\n  for (let i = 0; i < 10; i++) {\n    lookup[String.fromCharCode(startCode + i)] = i;\n  } // console.log({ nsName, start, end, lookup });\n\n\n  cache[nsName] = {\n    group: `[${start}-${end}]`,\n    lookup\n  };\n  return cache[nsName];\n}\n\nmodule.exports = {\n  chineseGroup,\n  defaultLookup,\n  startCodes,\n  buildDigits\n};","map":{"version":3,"sources":["/home/mike/proj/frontend/ui/node_modules/any-date-parser/src/data/numberingSystems.js"],"names":["startCodes","arab","arabext","bali","beng","deva","fullwide","gujr","khmr","knda","laoo","limb","mlym","mong","mymr","orya","tamldec","telu","thai","tibt","chineseGroup","defaultLookup","〇","一","二","三","四","五","六","七","八","九","cache","buildDigits","nsName","group","lookup","startCode","start","String","fromCharCode","end","i","module","exports"],"mappings":"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","sourcesContent":["const startCodes = {\n\tarab: 1632,\n\tarabext: 1776,\n\tbali: 6992,\n\tbeng: 2534,\n\tdeva: 2406,\n\tfullwide: 65296,\n\tgujr: 2790,\n\tkhmr: 6112,\n\tknda: 3302,\n\tlaoo: 3792,\n\tlimb: 6470,\n\tmlym: 3430,\n\tmong: 6160,\n\tmymr: 4160,\n\torya: 2918,\n\ttamldec: 3046,\n\ttelu: 3174,\n\tthai: 3664,\n\ttibt: 3872,\n};\n\n// full-width numbers, hanidec numbers, latin numbers (\\d)\nconst chineseGroup = '[０１２３４５６７８９〇一二三四五六七八九\\\\d]';\n\nconst defaultLookup = {\n\t0: 0,\n\t1: 1,\n\t2: 2,\n\t3: 3,\n\t4: 4,\n\t5: 5,\n\t6: 6,\n\t7: 7,\n\t8: 8,\n\t9: 9,\n\t'０': 0,\n\t'１': 1,\n\t'２': 2,\n\t'３': 3,\n\t'４': 4,\n\t'５': 5,\n\t'６': 6,\n\t'７': 7,\n\t'８': 8,\n\t'９': 9,\n\t〇: 0,\n\t一: 1,\n\t二: 2,\n\t三: 3,\n\t四: 4,\n\t五: 5,\n\t六: 6,\n\t七: 7,\n\t八: 8,\n\t九: 9,\n};\n\nconst cache = {};\n\nfunction buildDigits(nsName) {\n\tif (cache[nsName]) {\n\t\treturn cache[nsName];\n\t}\n\tif (nsName === 'fullwide' || nsName === 'hanidec') {\n\t\treturn { group: chineseGroup, lookup: { ...defaultLookup } };\n\t}\n\tconst startCode = startCodes[nsName];\n\t/* istanbul ignore next */\n\tif (!startCode) {\n\t\t// unknown numbering system; treat like latn\n\t\treturn { group: '\\\\d', lookup: { ...defaultLookup } };\n\t}\n\tconst start = String.fromCharCode(startCode);\n\tconst end = String.fromCharCode(startCode + 9);\n\tconst lookup = {};\n\tfor (let i = 0; i < 10; i++) {\n\t\tlookup[String.fromCharCode(startCode + i)] = i;\n\t}\n\t// console.log({ nsName, start, end, lookup });\n\tcache[nsName] = {\n\t\tgroup: `[${start}-${end}]`,\n\t\tlookup,\n\t};\n\treturn cache[nsName];\n}\n\nmodule.exports = { chineseGroup, defaultLookup, startCodes, buildDigits };\n"]},"metadata":{},"sourceType":"script"}