{"ast":null,"code":"var _jsxFileName = \"/home/mike/proj/frontend/ui/src/App.js\";\nimport React, { Component } from 'react';\nimport Urbit from '@urbit/http-api';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.urbit = new Urbit(\"http://localhost:8080\", \"lidlut-tabwed-pillex-ridrup\");\n    this.state = {\n      entries: [],\n      latest: null,\n      subID: null\n    };\n    this.urbit.ship = \"zod\";\n  }\n\n  componentDidMount() {\n    this.getEntries();\n    this.subscribe();\n  }\n\n  async getEntries() {\n    const {\n      entries: e\n    } = this.state;\n    const before = e.length === 0 ? Date.now() : e[e.length - 1].id;\n    const max = 1;\n    const path = `/entries/before/${before}/${max}`;\n    const result = await this.urbit.scry({\n      app: \"journal\",\n      path: path\n    });\n    this.handleUpdate(result);\n  }\n\n  subscribe() {\n    this.urbit.subscribe({\n      app: \"journal\",\n      path: \"/updates\",\n      event: this.handleUpdate\n    });\n  }\n\n  handleUpdate(upd) {\n    const {\n      entries: e\n    } = this.state;\n\n    if (\"entries\" in upd) {\n      this.setState({\n        entries: e.concat(upd.entries)\n      });\n    } else if (\"add\" in upd) {\n      const ind = _.sortedIndexBy(e, upd.add.id, \"id\");\n\n      const newE = e;\n      if (upd.add.id > e[e.length - 1].id) newE.splice(ind, 0, upd.add);\n      this.setState({\n        entries: newE\n      });\n    } else if (\"edit\" in upd) {\n      const ind = e.findIndex(e => e.id === upd.edit.id);\n      const newE = ind !== -1 ? e[ind] = upd.edit : e;\n      this.setState({\n        entries: newE\n      });\n    } else if (\"del\" in upd) {\n      const ind = e.findIndex(e => e.id === upd.del.id);\n      const newE = e;\n      if (ind !== -1) newE.splice(ind, 1);\n      this.setState({\n        entries: newE\n      });\n    }\n\n    ;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.getEntries(),\n        children: \"Moar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(this.state, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mike/proj/frontend/ui/src/App.js"],"names":["React","Component","Urbit","_","App","constructor","urbit","state","entries","latest","subID","ship","componentDidMount","getEntries","subscribe","e","before","length","Date","now","id","max","path","result","scry","app","handleUpdate","event","upd","setState","concat","ind","sortedIndexBy","add","newE","splice","findIndex","edit","del","render","JSON","stringify"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Urbit from '@urbit/http-api';\nimport _ from 'lodash';\n\nclass App extends Component {\n  urbit = new Urbit(\"http://localhost:8080\", \"lidlut-tabwed-pillex-ridrup\");\n  state = {\n    entries: [],\n    latest: null,\n    subID: null,\n  };\n\n  constructor() {\n    super();\n    this.urbit.ship = \"zod\";\n  };\n\n  componentDidMount() {\n    this.getEntries();\n    this.subscribe();\n  }\n\n  async getEntries() {\n    const {entries: e} = this.state;\n    const before = (e.length === 0) ? Date.now() : e[e.length - 1].id;\n    const max = 1;\n    const path = `/entries/before/${before}/${max}`;\n    const result = await this.urbit.scry({\n      app: \"journal\",\n      path: path\n    });\n    this.handleUpdate(result);\n  };\n\n  subscribe() {\n    this.urbit.subscribe({\n      app: \"journal\",\n      path: \"/updates\",\n      event: this.handleUpdate,\n    })\n  };\n\n  handleUpdate(upd) {\n    const {entries: e} = this.state;\n    if (\"entries\" in upd) {\n      this.setState({\n        entries: e.concat(upd.entries)\n      });\n    } else if (\"add\" in upd) {\n      const ind = _.sortedIndexBy(e, upd.add.id, \"id\");\n      const newE = e;\n      if (upd.add.id > e[e.length - 1].id) newE.splice(ind, 0, upd.add);\n      this.setState({\n        entries: newE,\n      });\n    } else if (\"edit\" in upd) {\n      const ind = e.findIndex(e => e.id === upd.edit.id);\n      const newE = (ind !== -1) ? e[ind] = upd.edit : e;\n      this.setState({\n        entries: newE\n      });\n    } else if (\"del\" in upd) {\n      const ind = e.findIndex(e => e.id === upd.del.id);\n      const newE = e;\n      if (ind !== -1) newE.splice(ind, 1);\n      this.setState({\n        entries: newE\n      });\n    };\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <button onClick={()=>this.getEntries()}>Moar</button>\n        <pre>{JSON.stringify(this.state, null, 2)}</pre>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}