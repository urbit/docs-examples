{"ast":null,"code":"const _excluded = [\"id\", \"value\", \"onChange\", \"onSelect\", \"onToggle\", \"onKeyDown\", \"onKeyPress\", \"onCurrentDateChange\", \"inputProps\", \"calendarProps\", \"timeInputProps\", \"popupProps\", \"autoFocus\", \"tabIndex\", \"disabled\", \"readOnly\", \"className\", \"valueFormat\", \"valueDisplayFormat\", \"valueEditFormat\", \"containerClassName\", \"name\", \"selectIcon\", \"placeholder\", \"includeTime\", \"min\", \"max\", \"open\", \"dropUp\", \"parse\", \"messages\", \"formats\", \"currentDate\", \"popupTransition\", \"popupComponent\", \"timePrecision\", \"aria-labelledby\", \"aria-describedby\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useImperativeHandle, useRef, useCallback } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport Calendar from './Calendar';\nimport DatePickerInput from './DatePickerInput';\nimport { calendar } from './Icon';\nimport { useLocalizer } from './Localization';\nimport BasePopup from './Popup';\nimport TimeInput from './TimeInput';\nimport Widget from './Widget';\nimport WidgetPicker from './WidgetPicker';\nimport dates from './dates';\nimport useDropdownToggle from './useDropdownToggle';\nimport useTabTrap from './useTabTrap';\nimport useFocusManager from './useFocusManager';\nimport { notify, useFirstFocusedRender, useInstanceId } from './WidgetHelpers';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport InputAddon from './InputAddon';\nlet propTypes = {\n  /**\n   * @example ['valuePicker', [ ['new Date()', null] ]]\n   */\n  value: PropTypes.instanceOf(Date),\n\n  /**\n   * @example ['onChangePicker', [ ['new Date()', null] ]]\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @example ['openDate']\n   */\n  open: PropTypes.bool,\n  onToggle: PropTypes.func,\n\n  /**\n   * Default current date at which the calendar opens. If none is provided, opens at today's date or the `value` date (if any).\n   */\n  currentDate: PropTypes.instanceOf(Date),\n\n  /**\n   * Change event Handler that is called when the currentDate is changed. The handler is called with the currentDate object.\n   */\n  onCurrentDateChange: PropTypes.func,\n  onSelect: PropTypes.func,\n\n  /**\n   * The minimum Date that can be selected. Min only limits selection, it doesn't constrain the date values that\n   * can be typed or pasted into the widget. If you need this behavior you can constrain values via\n   * the `onChange` handler.\n   *\n   * @example ['prop', ['min', 'new Date()']]\n   */\n  min: PropTypes.instanceOf(Date),\n\n  /**\n   * The maximum Date that can be selected. Max only limits selection, it doesn't constrain the date values that\n   * can be typed or pasted into the widget. If you need this behavior you can constrain values via\n   * the `onChange` handler.\n   *\n   * @example ['prop', ['max', 'new Date()']]\n   */\n  max: PropTypes.instanceOf(Date),\n\n  /**\n   * A formatting options used to display the date value. This is a shorthand for\n   * setting both `valueDisplayFormat` and `valueEditFormat`.\n   */\n  valueFormat: PropTypes.any,\n\n  /**\n   * A formatting options used to display the date value. For more information about formats\n   * visit the [Localization page](./localization)\n   *\n   * ```tsx live\n   * import { DatePicker } from 'react-widgets';\n   *\n   * <DatePicker\n   *   defaultValue={new Date()}\n   *   valueDisplayFormat={{ dateStyle: \"medium\" }}\n   * />\n   * ```\n   */\n  valueDisplayFormat: PropTypes.any,\n\n  /**\n   * A formatting options used while the date input has focus. Useful for showing a simpler format for inputing.\n   * For more information about formats visit the [Localization page](./localization)\n   *\n   * ```tsx live\n   * import { DatePicker } from 'react-widgets';\n   *\n   * <DatePicker\n   *   defaultValue={new Date()}\n   *   valueEditFormat={{ dateStyle: \"short\" }}\n   *   valueDisplayFormat={{ dateStyle: \"medium\" }}\n   * />\n   * ```\n   */\n  valueEditFormat: PropTypes.any,\n\n  /**\n   * Enable the time list component of the picker.\n   */\n  includeTime: PropTypes.bool,\n  timePrecision: PropTypes.oneOf(['minutes', 'seconds', 'milliseconds']),\n  timeInputProps: PropTypes.object,\n\n  /** Specify the element used to render the calendar dropdown icon. */\n  selectIcon: PropTypes.node,\n  dropUp: PropTypes.bool,\n  popupTransition: PropTypes.elementType,\n  placeholder: PropTypes.string,\n  name: PropTypes.string,\n  autoFocus: PropTypes.bool,\n\n  /**\n   * @example ['disabled', ['new Date()']]\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * @example ['readOnly', ['new Date()']]\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * Determines how the widget parses the typed date string into a Date object. You can provide an array of formats to try,\n   * or provide a function that returns a date to handle parsing yourself. When `parse` is unspecified and\n   * the `format` prop is a `string` parse will automatically use that format as its default.\n   */\n  parse: PropTypes.oneOfType([PropTypes.any, PropTypes.func]),\n\n  /** @ignore */\n  tabIndex: PropTypes.any,\n\n  /** @ignore */\n  'aria-labelledby': PropTypes.string,\n\n  /** @ignore */\n  'aria-describedby': PropTypes.string,\n\n  /** @ignore */\n  localizer: PropTypes.any,\n  onKeyDown: PropTypes.func,\n  onKeyPress: PropTypes.func,\n  onBlur: PropTypes.func,\n  onFocus: PropTypes.func,\n\n  /** Adds a css class to the input container element. */\n  containerClassName: PropTypes.string,\n  calendarProps: PropTypes.object,\n  inputProps: PropTypes.object,\n  messages: PropTypes.shape({\n    dateButton: PropTypes.string\n  })\n};\nconst defaultProps = Object.assign({}, Calendar.defaultProps, {\n  min: new Date(1900, 0, 1),\n  max: new Date(2099, 11, 31),\n  selectIcon: calendar,\n  formats: {}\n});\n/**\n * ---\n * subtitle: DatePicker, TimePicker\n * localized: true\n * shortcuts:\n *   - { key: alt + down arrow, label:  open calendar or time }\n *   - { key: alt + up arrow, label: close calendar or time }\n *   - { key: down arrow, label: move focus to next item }\n *   - { key: up arrow, label: move focus to previous item }\n *   - { key: home, label: move focus to first item }\n *   - { key: end, label: move focus to last item }\n *   - { key: enter, label: select focused item }\n *   - { key: any key, label: search list for item starting with key }\n * ---\n *\n * @public\n * @extends Calendar\n */\n\nconst DatePicker = /*#__PURE__*/React.forwardRef((uncontrolledProps, outerRef) => {\n  const _useUncontrolled = useUncontrolled(uncontrolledProps, {\n    open: 'onToggle',\n    value: 'onChange',\n    currentDate: 'onCurrentDateChange'\n  }),\n        {\n    id,\n    value,\n    onChange,\n    onSelect,\n    onToggle,\n    onKeyDown,\n    onKeyPress,\n    onCurrentDateChange,\n    inputProps,\n    calendarProps,\n    timeInputProps,\n    popupProps,\n    autoFocus,\n    tabIndex,\n    disabled,\n    readOnly,\n    className,\n    // @ts-ignore\n    valueFormat,\n    valueDisplayFormat = valueFormat,\n    valueEditFormat = valueFormat,\n    containerClassName,\n    name,\n    selectIcon,\n    placeholder,\n    includeTime = false,\n    min,\n    max,\n    open,\n    dropUp,\n    parse,\n    messages,\n    formats,\n    currentDate,\n    popupTransition,\n    popupComponent: Popup = BasePopup,\n    timePrecision,\n    'aria-labelledby': ariaLabelledby,\n    'aria-describedby': ariaDescribedby\n  } = _useUncontrolled,\n        elementProps = _objectWithoutPropertiesLoose(_useUncontrolled, _excluded);\n\n  const localizer = useLocalizer(messages, formats);\n  const ref = useRef(null);\n  const calRef = useRef(null);\n  const tabTrap = useTabTrap(calRef);\n  const inputId = useInstanceId(id, '_input');\n  const dateId = useInstanceId(id, '_date');\n  const currentFormat = includeTime ? 'datetime' : 'date';\n  const toggle = useDropdownToggle(open, onToggle);\n  const [focusEvents, focused] = useFocusManager(ref, uncontrolledProps, {\n    didHandle(focused) {\n      if (!focused) {\n        toggle.close();\n        tabTrap.stop();\n      } else if (open) {\n        tabTrap.focus();\n      }\n    }\n\n  });\n  const dateParser = useCallback(str => {\n    var _localizer$parseDate, _ref;\n\n    if (typeof parse == 'function') {\n      var _parse;\n\n      return (_parse = parse(str, localizer)) != null ? _parse : null;\n    }\n\n    return (_localizer$parseDate = localizer.parseDate(str, (_ref = parse != null ? parse : valueEditFormat) != null ? _ref : valueDisplayFormat)) != null ? _localizer$parseDate : null;\n  }, [localizer, parse, valueDisplayFormat, valueEditFormat]);\n  /**\n   * Handlers\n   */\n\n  const handleChange = useEventCallback((date, str, constrain) => {\n    if (readOnly || disabled) return;\n    if (constrain) date = inRangeValue(date);\n\n    if (onChange) {\n      if (date == null || value == null) {\n        if (date != value //eslint-disable-line eqeqeq\n        ) onChange(date, str);\n      } else if (!dates.eq(date, value)) {\n        onChange(date, str);\n      }\n    }\n  });\n  const handleKeyDown = useEventCallback(e => {\n    if (readOnly) return;\n    notify(onKeyDown, [e]);\n    if (e.defaultPrevented) return;\n\n    if (e.key === 'Escape' && open) {\n      toggle.close();\n    } else if (e.altKey) {\n      if (e.key === 'ArrowDown') {\n        e.preventDefault();\n        toggle.open();\n      } else if (e.key === 'ArrowUp') {\n        e.preventDefault();\n        toggle.close();\n      }\n    }\n  });\n  const handleKeyPress = useEventCallback(e => {\n    notify(onKeyPress, [e]);\n    if (e.defaultPrevented) return;\n  });\n  const handleDateSelect = useEventCallback(date => {\n    var _ref$current;\n\n    let dateTime = dates.merge(date, value, currentDate);\n    let dateStr = formatDate(date);\n    if (!includeTime) toggle.close();\n    notify(onSelect, [dateTime, dateStr]);\n    handleChange(dateTime, dateStr, true);\n    (_ref$current = ref.current) == null ? void 0 : _ref$current.focus();\n  });\n  const handleTimeChange = useEventCallback(date => {\n    handleChange(date, formatDate(date), true);\n  });\n  const handleCalendarClick = useEventCallback(e => {\n    if (readOnly || disabled) return; // prevents double clicks when in a <label>\n\n    e.preventDefault();\n    toggle();\n  });\n\n  const handleOpening = () => {\n    tabTrap.start();\n    requestAnimationFrame(() => {\n      tabTrap.focus();\n    });\n  };\n\n  const handleClosing = () => {\n    tabTrap.stop();\n    if (focused) focus();\n  };\n  /**\n   * Methods\n   */\n\n\n  function focus() {\n    var _calRef$current, _ref$current2;\n\n    if (open) (_calRef$current = calRef.current) == null ? void 0 : _calRef$current.focus();else (_ref$current2 = ref.current) == null ? void 0 : _ref$current2.focus();\n  }\n\n  function inRangeValue(value) {\n    if (value == null) return value;\n    return dates.max(dates.min(value, max), min);\n  }\n\n  function formatDate(date) {\n    return date instanceof Date && !isNaN(date.getTime()) ? localizer.formatDate(date, currentFormat) : '';\n  }\n\n  useImperativeHandle(outerRef, () => ({\n    focus\n  }));\n  let shouldRenderList = useFirstFocusedRender(focused, open);\n  const inputReadOnly = (inputProps == null ? void 0 : inputProps.readOnly) != null ? inputProps == null ? void 0 : inputProps.readOnly : readOnly;\n  return /*#__PURE__*/React.createElement(Widget, _extends({}, elementProps, {\n    defaultValue: undefined,\n    open: !!open,\n    dropUp: dropUp,\n    focused: focused,\n    disabled: disabled,\n    readOnly: readOnly,\n    onKeyDown: handleKeyDown,\n    onKeyPress: handleKeyPress\n  }, focusEvents, {\n    className: cn(className, 'rw-date-picker')\n  }), /*#__PURE__*/React.createElement(WidgetPicker, {\n    className: containerClassName\n  }, /*#__PURE__*/React.createElement(DatePickerInput, _extends({}, inputProps, {\n    id: inputId,\n    ref: ref,\n    role: \"combobox\",\n    name: name,\n    value: value,\n    tabIndex: tabIndex,\n    autoFocus: autoFocus,\n    placeholder: placeholder,\n    disabled: disabled,\n    readOnly: inputReadOnly,\n    formatter: currentFormat,\n    displayFormat: valueDisplayFormat,\n    editFormat: valueEditFormat,\n    editing: focused,\n    localizer: localizer,\n    parse: dateParser,\n    onChange: handleChange,\n    \"aria-haspopup\": true,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    \"aria-expanded\": !!open,\n    \"aria-owns\": dateId\n  })), /*#__PURE__*/React.createElement(InputAddon, {\n    icon: selectIcon,\n    label: localizer.messages.dateButton(),\n    disabled: disabled || readOnly,\n    onClick: handleCalendarClick\n  })), !!shouldRenderList && /*#__PURE__*/React.createElement(Popup, _extends({}, popupProps, {\n    dropUp: dropUp,\n    open: open,\n    role: \"dialog\",\n    ref: calRef,\n    id: dateId,\n    className: \"rw-calendar-popup\",\n    transition: popupTransition,\n    onEntering: handleOpening,\n    onExited: handleClosing\n  }), /*#__PURE__*/React.createElement(Calendar, _extends({\n    min: min,\n    max: max,\n    bordered: false\n  }, calendarProps, {\n    messages: Object.assign({}, messages, calendarProps == null ? void 0 : calendarProps.messages),\n    tabIndex: -1,\n    value: value,\n    autoFocus: false,\n    onChange: handleDateSelect,\n    currentDate: currentDate,\n    onCurrentDateChange: onCurrentDateChange,\n    \"aria-hidden\": !open,\n    \"aria-live\": \"polite\",\n    \"aria-labelledby\": inputId\n  })), includeTime && /*#__PURE__*/React.createElement(TimeInput, _extends({}, timeInputProps, {\n    value: value,\n    precision: timePrecision,\n    onChange: handleTimeChange,\n    datePart: currentDate\n  }))));\n});\nDatePicker.displayName = 'DatePicker';\nDatePicker.propTypes = propTypes;\nDatePicker.defaultProps = defaultProps;\nexport default DatePicker;","map":{"version":3,"sources":["/home/mike/proj/frontend/ui/node_modules/react-widgets/esm/DatePicker.js"],"names":["_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","cn","PropTypes","React","useImperativeHandle","useRef","useCallback","useUncontrolled","Calendar","DatePickerInput","calendar","useLocalizer","BasePopup","TimeInput","Widget","WidgetPicker","dates","useDropdownToggle","useTabTrap","useFocusManager","notify","useFirstFocusedRender","useInstanceId","useEventCallback","InputAddon","propTypes","value","instanceOf","Date","onChange","func","open","bool","onToggle","currentDate","onCurrentDateChange","onSelect","min","max","valueFormat","any","valueDisplayFormat","valueEditFormat","includeTime","timePrecision","oneOf","timeInputProps","object","selectIcon","node","dropUp","popupTransition","elementType","placeholder","string","name","autoFocus","disabled","readOnly","parse","oneOfType","tabIndex","localizer","onKeyDown","onKeyPress","onBlur","onFocus","containerClassName","calendarProps","inputProps","messages","shape","dateButton","defaultProps","formats","DatePicker","forwardRef","uncontrolledProps","outerRef","_useUncontrolled","id","popupProps","className","popupComponent","Popup","ariaLabelledby","ariaDescribedby","elementProps","ref","calRef","tabTrap","inputId","dateId","currentFormat","toggle","focusEvents","focused","didHandle","close","stop","focus","dateParser","str","_localizer$parseDate","_ref","_parse","parseDate","handleChange","date","constrain","inRangeValue","eq","handleKeyDown","e","defaultPrevented","altKey","preventDefault","handleKeyPress","handleDateSelect","_ref$current","dateTime","merge","dateStr","formatDate","current","handleTimeChange","handleCalendarClick","handleOpening","start","requestAnimationFrame","handleClosing","_calRef$current","_ref$current2","isNaN","getTime","shouldRenderList","inputReadOnly","createElement","defaultValue","undefined","role","formatter","displayFormat","editFormat","editing","icon","label","onClick","transition","onEntering","onExited","bordered","precision","datePart","displayName"],"mappings":"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","sourcesContent":["const _excluded = [\"id\", \"value\", \"onChange\", \"onSelect\", \"onToggle\", \"onKeyDown\", \"onKeyPress\", \"onCurrentDateChange\", \"inputProps\", \"calendarProps\", \"timeInputProps\", \"popupProps\", \"autoFocus\", \"tabIndex\", \"disabled\", \"readOnly\", \"className\", \"valueFormat\", \"valueDisplayFormat\", \"valueEditFormat\", \"containerClassName\", \"name\", \"selectIcon\", \"placeholder\", \"includeTime\", \"min\", \"max\", \"open\", \"dropUp\", \"parse\", \"messages\", \"formats\", \"currentDate\", \"popupTransition\", \"popupComponent\", \"timePrecision\", \"aria-labelledby\", \"aria-describedby\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useImperativeHandle, useRef, useCallback } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport Calendar from './Calendar';\nimport DatePickerInput from './DatePickerInput';\nimport { calendar } from './Icon';\nimport { useLocalizer } from './Localization';\nimport BasePopup from './Popup';\nimport TimeInput from './TimeInput';\nimport Widget from './Widget';\nimport WidgetPicker from './WidgetPicker';\nimport dates from './dates';\nimport useDropdownToggle from './useDropdownToggle';\nimport useTabTrap from './useTabTrap';\nimport useFocusManager from './useFocusManager';\nimport { notify, useFirstFocusedRender, useInstanceId } from './WidgetHelpers';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport InputAddon from './InputAddon';\nlet propTypes = {\n  /**\n   * @example ['valuePicker', [ ['new Date()', null] ]]\n   */\n  value: PropTypes.instanceOf(Date),\n\n  /**\n   * @example ['onChangePicker', [ ['new Date()', null] ]]\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @example ['openDate']\n   */\n  open: PropTypes.bool,\n  onToggle: PropTypes.func,\n\n  /**\n   * Default current date at which the calendar opens. If none is provided, opens at today's date or the `value` date (if any).\n   */\n  currentDate: PropTypes.instanceOf(Date),\n\n  /**\n   * Change event Handler that is called when the currentDate is changed. The handler is called with the currentDate object.\n   */\n  onCurrentDateChange: PropTypes.func,\n  onSelect: PropTypes.func,\n\n  /**\n   * The minimum Date that can be selected. Min only limits selection, it doesn't constrain the date values that\n   * can be typed or pasted into the widget. If you need this behavior you can constrain values via\n   * the `onChange` handler.\n   *\n   * @example ['prop', ['min', 'new Date()']]\n   */\n  min: PropTypes.instanceOf(Date),\n\n  /**\n   * The maximum Date that can be selected. Max only limits selection, it doesn't constrain the date values that\n   * can be typed or pasted into the widget. If you need this behavior you can constrain values via\n   * the `onChange` handler.\n   *\n   * @example ['prop', ['max', 'new Date()']]\n   */\n  max: PropTypes.instanceOf(Date),\n\n  /**\n   * A formatting options used to display the date value. This is a shorthand for\n   * setting both `valueDisplayFormat` and `valueEditFormat`.\n   */\n  valueFormat: PropTypes.any,\n\n  /**\n   * A formatting options used to display the date value. For more information about formats\n   * visit the [Localization page](./localization)\n   *\n   * ```tsx live\n   * import { DatePicker } from 'react-widgets';\n   *\n   * <DatePicker\n   *   defaultValue={new Date()}\n   *   valueDisplayFormat={{ dateStyle: \"medium\" }}\n   * />\n   * ```\n   */\n  valueDisplayFormat: PropTypes.any,\n\n  /**\n   * A formatting options used while the date input has focus. Useful for showing a simpler format for inputing.\n   * For more information about formats visit the [Localization page](./localization)\n   *\n   * ```tsx live\n   * import { DatePicker } from 'react-widgets';\n   *\n   * <DatePicker\n   *   defaultValue={new Date()}\n   *   valueEditFormat={{ dateStyle: \"short\" }}\n   *   valueDisplayFormat={{ dateStyle: \"medium\" }}\n   * />\n   * ```\n   */\n  valueEditFormat: PropTypes.any,\n\n  /**\n   * Enable the time list component of the picker.\n   */\n  includeTime: PropTypes.bool,\n  timePrecision: PropTypes.oneOf(['minutes', 'seconds', 'milliseconds']),\n  timeInputProps: PropTypes.object,\n\n  /** Specify the element used to render the calendar dropdown icon. */\n  selectIcon: PropTypes.node,\n  dropUp: PropTypes.bool,\n  popupTransition: PropTypes.elementType,\n  placeholder: PropTypes.string,\n  name: PropTypes.string,\n  autoFocus: PropTypes.bool,\n\n  /**\n   * @example ['disabled', ['new Date()']]\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * @example ['readOnly', ['new Date()']]\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * Determines how the widget parses the typed date string into a Date object. You can provide an array of formats to try,\n   * or provide a function that returns a date to handle parsing yourself. When `parse` is unspecified and\n   * the `format` prop is a `string` parse will automatically use that format as its default.\n   */\n  parse: PropTypes.oneOfType([PropTypes.any, PropTypes.func]),\n\n  /** @ignore */\n  tabIndex: PropTypes.any,\n\n  /** @ignore */\n  'aria-labelledby': PropTypes.string,\n\n  /** @ignore */\n  'aria-describedby': PropTypes.string,\n\n  /** @ignore */\n  localizer: PropTypes.any,\n  onKeyDown: PropTypes.func,\n  onKeyPress: PropTypes.func,\n  onBlur: PropTypes.func,\n  onFocus: PropTypes.func,\n\n  /** Adds a css class to the input container element. */\n  containerClassName: PropTypes.string,\n  calendarProps: PropTypes.object,\n  inputProps: PropTypes.object,\n  messages: PropTypes.shape({\n    dateButton: PropTypes.string\n  })\n};\nconst defaultProps = Object.assign({}, Calendar.defaultProps, {\n  min: new Date(1900, 0, 1),\n  max: new Date(2099, 11, 31),\n  selectIcon: calendar,\n  formats: {}\n});\n\n/**\n * ---\n * subtitle: DatePicker, TimePicker\n * localized: true\n * shortcuts:\n *   - { key: alt + down arrow, label:  open calendar or time }\n *   - { key: alt + up arrow, label: close calendar or time }\n *   - { key: down arrow, label: move focus to next item }\n *   - { key: up arrow, label: move focus to previous item }\n *   - { key: home, label: move focus to first item }\n *   - { key: end, label: move focus to last item }\n *   - { key: enter, label: select focused item }\n *   - { key: any key, label: search list for item starting with key }\n * ---\n *\n * @public\n * @extends Calendar\n */\nconst DatePicker = /*#__PURE__*/React.forwardRef((uncontrolledProps, outerRef) => {\n  const _useUncontrolled = useUncontrolled(uncontrolledProps, {\n    open: 'onToggle',\n    value: 'onChange',\n    currentDate: 'onCurrentDateChange'\n  }),\n        {\n    id,\n    value,\n    onChange,\n    onSelect,\n    onToggle,\n    onKeyDown,\n    onKeyPress,\n    onCurrentDateChange,\n    inputProps,\n    calendarProps,\n    timeInputProps,\n    popupProps,\n    autoFocus,\n    tabIndex,\n    disabled,\n    readOnly,\n    className,\n    // @ts-ignore\n    valueFormat,\n    valueDisplayFormat = valueFormat,\n    valueEditFormat = valueFormat,\n    containerClassName,\n    name,\n    selectIcon,\n    placeholder,\n    includeTime = false,\n    min,\n    max,\n    open,\n    dropUp,\n    parse,\n    messages,\n    formats,\n    currentDate,\n    popupTransition,\n    popupComponent: Popup = BasePopup,\n    timePrecision,\n    'aria-labelledby': ariaLabelledby,\n    'aria-describedby': ariaDescribedby\n  } = _useUncontrolled,\n        elementProps = _objectWithoutPropertiesLoose(_useUncontrolled, _excluded);\n\n  const localizer = useLocalizer(messages, formats);\n  const ref = useRef(null);\n  const calRef = useRef(null);\n  const tabTrap = useTabTrap(calRef);\n  const inputId = useInstanceId(id, '_input');\n  const dateId = useInstanceId(id, '_date');\n  const currentFormat = includeTime ? 'datetime' : 'date';\n  const toggle = useDropdownToggle(open, onToggle);\n  const [focusEvents, focused] = useFocusManager(ref, uncontrolledProps, {\n    didHandle(focused) {\n      if (!focused) {\n        toggle.close();\n        tabTrap.stop();\n      } else if (open) {\n        tabTrap.focus();\n      }\n    }\n\n  });\n  const dateParser = useCallback(str => {\n    var _localizer$parseDate, _ref;\n\n    if (typeof parse == 'function') {\n      var _parse;\n\n      return (_parse = parse(str, localizer)) != null ? _parse : null;\n    }\n\n    return (_localizer$parseDate = localizer.parseDate(str, (_ref = parse != null ? parse : valueEditFormat) != null ? _ref : valueDisplayFormat)) != null ? _localizer$parseDate : null;\n  }, [localizer, parse, valueDisplayFormat, valueEditFormat]);\n  /**\n   * Handlers\n   */\n\n  const handleChange = useEventCallback((date, str, constrain) => {\n    if (readOnly || disabled) return;\n    if (constrain) date = inRangeValue(date);\n\n    if (onChange) {\n      if (date == null || value == null) {\n        if (date != value //eslint-disable-line eqeqeq\n        ) onChange(date, str);\n      } else if (!dates.eq(date, value)) {\n        onChange(date, str);\n      }\n    }\n  });\n  const handleKeyDown = useEventCallback(e => {\n    if (readOnly) return;\n    notify(onKeyDown, [e]);\n    if (e.defaultPrevented) return;\n\n    if (e.key === 'Escape' && open) {\n      toggle.close();\n    } else if (e.altKey) {\n      if (e.key === 'ArrowDown') {\n        e.preventDefault();\n        toggle.open();\n      } else if (e.key === 'ArrowUp') {\n        e.preventDefault();\n        toggle.close();\n      }\n    }\n  });\n  const handleKeyPress = useEventCallback(e => {\n    notify(onKeyPress, [e]);\n    if (e.defaultPrevented) return;\n  });\n  const handleDateSelect = useEventCallback(date => {\n    var _ref$current;\n\n    let dateTime = dates.merge(date, value, currentDate);\n    let dateStr = formatDate(date);\n    if (!includeTime) toggle.close();\n    notify(onSelect, [dateTime, dateStr]);\n    handleChange(dateTime, dateStr, true);\n    (_ref$current = ref.current) == null ? void 0 : _ref$current.focus();\n  });\n  const handleTimeChange = useEventCallback(date => {\n    handleChange(date, formatDate(date), true);\n  });\n  const handleCalendarClick = useEventCallback(e => {\n    if (readOnly || disabled) return; // prevents double clicks when in a <label>\n\n    e.preventDefault();\n    toggle();\n  });\n\n  const handleOpening = () => {\n    tabTrap.start();\n    requestAnimationFrame(() => {\n      tabTrap.focus();\n    });\n  };\n\n  const handleClosing = () => {\n    tabTrap.stop();\n    if (focused) focus();\n  };\n  /**\n   * Methods\n   */\n\n\n  function focus() {\n    var _calRef$current, _ref$current2;\n\n    if (open) (_calRef$current = calRef.current) == null ? void 0 : _calRef$current.focus();else (_ref$current2 = ref.current) == null ? void 0 : _ref$current2.focus();\n  }\n\n  function inRangeValue(value) {\n    if (value == null) return value;\n    return dates.max(dates.min(value, max), min);\n  }\n\n  function formatDate(date) {\n    return date instanceof Date && !isNaN(date.getTime()) ? localizer.formatDate(date, currentFormat) : '';\n  }\n\n  useImperativeHandle(outerRef, () => ({\n    focus\n  }));\n  let shouldRenderList = useFirstFocusedRender(focused, open);\n  const inputReadOnly = (inputProps == null ? void 0 : inputProps.readOnly) != null ? inputProps == null ? void 0 : inputProps.readOnly : readOnly;\n  return /*#__PURE__*/React.createElement(Widget, _extends({}, elementProps, {\n    defaultValue: undefined,\n    open: !!open,\n    dropUp: dropUp,\n    focused: focused,\n    disabled: disabled,\n    readOnly: readOnly,\n    onKeyDown: handleKeyDown,\n    onKeyPress: handleKeyPress\n  }, focusEvents, {\n    className: cn(className, 'rw-date-picker')\n  }), /*#__PURE__*/React.createElement(WidgetPicker, {\n    className: containerClassName\n  }, /*#__PURE__*/React.createElement(DatePickerInput, _extends({}, inputProps, {\n    id: inputId,\n    ref: ref,\n    role: \"combobox\",\n    name: name,\n    value: value,\n    tabIndex: tabIndex,\n    autoFocus: autoFocus,\n    placeholder: placeholder,\n    disabled: disabled,\n    readOnly: inputReadOnly,\n    formatter: currentFormat,\n    displayFormat: valueDisplayFormat,\n    editFormat: valueEditFormat,\n    editing: focused,\n    localizer: localizer,\n    parse: dateParser,\n    onChange: handleChange,\n    \"aria-haspopup\": true,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    \"aria-expanded\": !!open,\n    \"aria-owns\": dateId\n  })), /*#__PURE__*/React.createElement(InputAddon, {\n    icon: selectIcon,\n    label: localizer.messages.dateButton(),\n    disabled: disabled || readOnly,\n    onClick: handleCalendarClick\n  })), !!shouldRenderList && /*#__PURE__*/React.createElement(Popup, _extends({}, popupProps, {\n    dropUp: dropUp,\n    open: open,\n    role: \"dialog\",\n    ref: calRef,\n    id: dateId,\n    className: \"rw-calendar-popup\",\n    transition: popupTransition,\n    onEntering: handleOpening,\n    onExited: handleClosing\n  }), /*#__PURE__*/React.createElement(Calendar, _extends({\n    min: min,\n    max: max,\n    bordered: false\n  }, calendarProps, {\n    messages: Object.assign({}, messages, calendarProps == null ? void 0 : calendarProps.messages),\n    tabIndex: -1,\n    value: value,\n    autoFocus: false,\n    onChange: handleDateSelect,\n    currentDate: currentDate,\n    onCurrentDateChange: onCurrentDateChange,\n    \"aria-hidden\": !open,\n    \"aria-live\": \"polite\",\n    \"aria-labelledby\": inputId\n  })), includeTime && /*#__PURE__*/React.createElement(TimeInput, _extends({}, timeInputProps, {\n    value: value,\n    precision: timePrecision,\n    onChange: handleTimeChange,\n    datePart: currentDate\n  }))));\n});\nDatePicker.displayName = 'DatePicker';\nDatePicker.propTypes = propTypes;\nDatePicker.defaultProps = defaultProps;\nexport default DatePicker;"]},"metadata":{},"sourceType":"module"}