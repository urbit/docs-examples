{"ast":null,"code":"const LocaleHelper = require('../../LocaleHelper/LocaleHelper.js');\n\nconst Format = require('../../Format/Format.js'); // lots of 12h time such as \"11:59\", \"11:59pm\", \"11:59:33 pm\", \"11:59:33 p.m.\"\n\n\nconst time12Hours = new Format({\n  /* prettier-ignore */\n  //           $1                               $2                 $3           $4                 $5\n  template: '^(.*?)_SPACE_*(?:at|on|T|)_SPACE_*(_H12_|_H24_)(?:\\\\:(_MIN_)(?:\\\\:(_SEC_))?)?_SPACE_*(_MERIDIEM_)$',\n  handler: function (matches, locale) {\n    let [, dateExpr, hour, minute, second, ampm] = matches;\n    let result = {};\n\n    if (dateExpr) {\n      result = this.parser.attempt(dateExpr, locale);\n\n      if (result.invalid) {\n        // let other matchers have a chance\n        return null;\n      }\n    }\n\n    const tpl = LocaleHelper.factory(locale);\n\n    if (ampm) {\n      const offset = tpl.lookups.meridiem[ampm.toLowerCase()] || 0;\n      hour = parseFloat(hour);\n\n      if (hour === 12) {\n        hour = offset;\n      } else if (hour > 12 && offset === 12) {\n        hour += 0;\n      } else {\n        hour += offset;\n      }\n    }\n\n    result.hour = hour;\n\n    if (minute) {\n      result.minute = minute;\n    }\n\n    if (second) {\n      result.second = second;\n    }\n\n    return result;\n  }\n});\nmodule.exports = time12Hours;","map":{"version":3,"sources":["/home/mike/proj/frontend/ui/node_modules/any-date-parser/src/formats/time12Hours/time12Hours.js"],"names":["LocaleHelper","require","Format","time12Hours","template","handler","matches","locale","dateExpr","hour","minute","second","ampm","result","parser","attempt","invalid","tpl","factory","offset","lookups","meridiem","toLowerCase","parseFloat","module","exports"],"mappings":"AAAA,MAAMA,YAAY,GAAGC,OAAO,CAAC,oCAAD,CAA5B;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,wBAAD,CAAtB,C,CAEA;;;AACA,MAAME,WAAW,GAAG,IAAID,MAAJ,CAAW;AAC9B;AACA;AACAE,EAAAA,QAAQ,EAAE,oGAHoB;AAI9BC,EAAAA,OAAO,EAAE,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AACnC,QAAI,GAAGC,QAAH,EAAaC,IAAb,EAAmBC,MAAnB,EAA2BC,MAA3B,EAAmCC,IAAnC,IAA2CN,OAA/C;AACA,QAAIO,MAAM,GAAG,EAAb;;AACA,QAAIL,QAAJ,EAAc;AACbK,MAAAA,MAAM,GAAG,KAAKC,MAAL,CAAYC,OAAZ,CAAoBP,QAApB,EAA8BD,MAA9B,CAAT;;AACA,UAAIM,MAAM,CAACG,OAAX,EAAoB;AACnB;AACA,eAAO,IAAP;AACA;AACD;;AACD,UAAMC,GAAG,GAAGjB,YAAY,CAACkB,OAAb,CAAqBX,MAArB,CAAZ;;AACA,QAAIK,IAAJ,EAAU;AACT,YAAMO,MAAM,GAAGF,GAAG,CAACG,OAAJ,CAAYC,QAAZ,CAAqBT,IAAI,CAACU,WAAL,EAArB,KAA4C,CAA3D;AACAb,MAAAA,IAAI,GAAGc,UAAU,CAACd,IAAD,CAAjB;;AACA,UAAIA,IAAI,KAAK,EAAb,EAAiB;AAChBA,QAAAA,IAAI,GAAGU,MAAP;AACA,OAFD,MAEO,IAAIV,IAAI,GAAG,EAAP,IAAaU,MAAM,KAAK,EAA5B,EAAgC;AACtCV,QAAAA,IAAI,IAAI,CAAR;AACA,OAFM,MAEA;AACNA,QAAAA,IAAI,IAAIU,MAAR;AACA;AACD;;AACDN,IAAAA,MAAM,CAACJ,IAAP,GAAcA,IAAd;;AACA,QAAIC,MAAJ,EAAY;AACXG,MAAAA,MAAM,CAACH,MAAP,GAAgBA,MAAhB;AACA;;AACD,QAAIC,MAAJ,EAAY;AACXE,MAAAA,MAAM,CAACF,MAAP,GAAgBA,MAAhB;AACA;;AACD,WAAOE,MAAP;AACA;AAlC6B,CAAX,CAApB;AAqCAW,MAAM,CAACC,OAAP,GAAiBtB,WAAjB","sourcesContent":["const LocaleHelper = require('../../LocaleHelper/LocaleHelper.js');\nconst Format = require('../../Format/Format.js');\n\n// lots of 12h time such as \"11:59\", \"11:59pm\", \"11:59:33 pm\", \"11:59:33 p.m.\"\nconst time12Hours = new Format({\n\t/* prettier-ignore */\n\t//           $1                               $2                 $3           $4                 $5\n\ttemplate: '^(.*?)_SPACE_*(?:at|on|T|)_SPACE_*(_H12_|_H24_)(?:\\\\:(_MIN_)(?:\\\\:(_SEC_))?)?_SPACE_*(_MERIDIEM_)$',\n\thandler: function (matches, locale) {\n\t\tlet [, dateExpr, hour, minute, second, ampm] = matches;\n\t\tlet result = {};\n\t\tif (dateExpr) {\n\t\t\tresult = this.parser.attempt(dateExpr, locale);\n\t\t\tif (result.invalid) {\n\t\t\t\t// let other matchers have a chance\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\tconst tpl = LocaleHelper.factory(locale);\n\t\tif (ampm) {\n\t\t\tconst offset = tpl.lookups.meridiem[ampm.toLowerCase()] || 0;\n\t\t\thour = parseFloat(hour);\n\t\t\tif (hour === 12) {\n\t\t\t\thour = offset;\n\t\t\t} else if (hour > 12 && offset === 12) {\n\t\t\t\thour += 0;\n\t\t\t} else {\n\t\t\t\thour += offset;\n\t\t\t}\n\t\t}\n\t\tresult.hour = hour;\n\t\tif (minute) {\n\t\t\tresult.minute = minute;\n\t\t}\n\t\tif (second) {\n\t\t\tresult.second = second;\n\t\t}\n\t\treturn result;\n\t},\n});\n\nmodule.exports = time12Hours;\n"]},"metadata":{},"sourceType":"script"}