{"ast":null,"code":"var _jsxFileName = \"/home/mike/proj/frontend/ui/src/App.js\";\nimport React, { Component } from 'react';\nimport Urbit from '@urbit/http-api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    this.urbit.ship = \"zod\";\n  }\n\n  componentDidMount() {\n    this.scry();\n  }\n\n  async scry() {\n    const result = await this.urbit.scry({\n      app: \"journal\",\n      path: \"/entries/all\"\n    });\n    this.setState(result);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(this.state, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mike/proj/frontend/ui/src/App.js"],"names":["React","Component","Urbit","App","constructor","urbit","ship","componentDidMount","scry","result","app","path","setState","render","JSON","stringify","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,iBAAlB;;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAI1BG,EAAAA,WAAW,GAAG;AACZ,SAAKC,KAAL,CAAWC,IAAX,GAAkB,KAAlB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,IAAL;AACD;;AAES,QAAJA,IAAI,GAAG;AACX,UAAMC,MAAM,GAAG,MAAM,KAAKJ,KAAL,CAAWG,IAAX,CAAgB;AACnCE,MAAAA,GAAG,EAAE,SAD8B;AAEnCC,MAAAA,IAAI,EAAE;AAF6B,KAAhB,CAArB;AAIA,SAAKC,QAAL,CAAcH,MAAd;AACD;;AAGDI,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAA,gBAAMC,IAAI,CAACC,SAAL,CAAe,KAAKC,KAApB,EAA2B,IAA3B,EAAiC,CAAjC;AAAN;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAvByB;;AA0B5B,eAAeb,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport Urbit from '@urbit/http-api';\n\nclass App extends Component {\n  urbit = new Urbit(\"http://localhost:8080\", \"lidlut-tabwed-pillex-ridrup\");\n  state = {};\n\n  constructor() {\n    this.urbit.ship = \"zod\";\n  };\n\n  componentDidMount() {\n    this.scry();\n  };\n\n  async scry() {\n    const result = await this.urbit.scry({\n      app: \"journal\",\n      path: \"/entries/all\"\n    });\n    this.setState(result);\n  };\n\n\n  render() {\n    return <pre>{JSON.stringify(this.state, null, 2)}</pre>;\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}